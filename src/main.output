Terminals unused in grammar

    BOOL


Grammar

    0 $accept: program $end

    1 program: units

    2 units: declaration SEMICOLON
    3      | function
    4      | units declaration SEMICOLON
    5      | units function

    6 function: T IDENTIFIER LEFTBR PARMS RIGHTBR LBRACE statements RBRACE
    7         | T IDENTIFIER LEFTBR RIGHTBR LBRACE statements RBRACE

    8 PARMS: T IDENTIFIER
    9      | PARMS COMMA T IDENTIFIER

   10 statements: statement
   11           | statements statement

   12 statement: SEMICOLON
   13          | declaration SEMICOLON
   14          | WHILE LEFTBR expr RIGHTBR LBRACE statements RBRACE
   15          | FOR LEFTBR expr SEMICOLON expr SEMICOLON expr RIGHTBR LBRACE statements RBRACE
   16          | FOR LEFTBR for_decl SEMICOLON expr SEMICOLON expr RIGHTBR LBRACE statements RBRACE
   17          | IF LEFTBR expr RIGHTBR LBRACE statements RBRACE
   18          | RETURN expr SEMICOLON
   19          | RETURN SEMICOLON
   20          | expr SEMICOLON

   21 for_decl: T IDENTIFIER LOP_ASS expr
   22         | PARMS COMMA T IDENTIFIER LOP_ASS expr

   23 declaration: T IDENTIFIER LOP_ASS expr
   24            | T IDENTIFIERS

   25 IDENTIFIERS: IDENTIFIER
   26            | IDENTIFIERS COMMA IDENTIFIER

   27 PAS: expr
   28    | PAS COMMA expr

   29 expr: IDENTIFIER
   30     | INTEGER
   31     | CHAR
   32     | STRING
   33     | IDENTIFIER LEFTBR PAS RIGHTBR
   34     | IDENTIFIER LEFTBR RIGHTBR
   35     | expr ADD expr
   36     | expr SUB expr
   37     | expr MUL expr
   38     | expr DIV expr
   39     | expr SUR expr
   40     | expr LSHIFT expr
   41     | expr RSHIFT expr
   42     | expr BIT_AND expr
   43     | expr BIT_OR expr
   44     | expr BIT_XOR expr
   45     | expr EQ expr
   46     | expr UEQ expr
   47     | expr LT expr
   48     | expr GT expr
   49     | expr LE expr
   50     | expr GE expr
   51     | expr LOG_AND expr
   52     | expr LOG_OR expr
   53     | expr LOP_ASS expr
   54     | expr ADD_ASS expr
   55     | expr SUB_ASS expr
   56     | expr MUL_ASS expr
   57     | expr DIV_ASS expr
   58     | expr SUR_ASS expr
   59     | expr LS_ASS expr
   60     | expr RS_ASS expr
   61     | expr OR_ASS expr
   62     | expr AND_ASS expr
   63     | expr XOR_ASS expr
   64     | SUB expr
   65     | ADD expr
   66     | LOG_NOT expr
   67     | BIT_NOT expr
   68     | BIT_AND expr
   69     | INCR expr
   70     | DECR expr
   71     | expr INCR
   72     | expr DECR
   73     | LEFTBR expr RIGHTBR

   74 T: T_INT
   75  | T_CHAR
   76  | T_BOOL
   77  | T_STRING
   78  | T_VOID


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_CHAR (258) 75
    T_INT (259) 74
    T_STRING (260) 77
    T_BOOL (261) 76
    T_VOID (262) 78
    LOP_ASS (263) 21 22 23 53
    ADD_ASS (264) 54
    SUB_ASS (265) 55
    MUL_ASS (266) 56
    DIV_ASS (267) 57
    SUR_ASS (268) 58
    LS_ASS (269) 59
    RS_ASS (270) 60
    AND_ASS (271) 62
    OR_ASS (272) 61
    XOR_ASS (273) 63
    LOG_OR (274) 52
    LOG_AND (275) 51
    BIT_OR (276) 43
    BIT_XOR (277) 44
    BIT_AND (278) 42 68
    EQ (279) 45
    UEQ (280) 46
    GT (281) 48
    LT (282) 47
    GE (283) 50
    LE (284) 49
    LSHIFT (285) 40
    RSHIFT (286) 41
    ADD (287) 35 65
    SUB (288) 36 64
    MUL (289) 37
    DIV (290) 38
    SUR (291) 39
    BIT_NOT (292) 67
    LOG_NOT (293) 66
    INCR (294) 69 71
    DECR (295) 70 72
    LEFTBR (296) 6 7 14 15 16 17 33 34 73
    RIGHTBR (297) 6 7 14 15 16 17 33 34 73
    LBRACE (298) 6 7 14 15 16 17
    RBRACE (299) 6 7 14 15 16 17
    SEMICOLON (300) 2 4 12 13 15 16 18 19 20
    COMMA (301) 9 22 26 28
    IDENTIFIER (302) 6 7 8 9 21 22 23 25 26 29 33 34
    INTEGER (303) 30
    CHAR (304) 31
    BOOL (305)
    STRING (306) 32
    IF (307) 17
    WHILE (308) 14
    FOR (309) 15 16
    RETURN (310) 18 19
    ADDR (311)
    UMINUS (312)
    UADD (313)
    BACK_INCR (314)
    BACK_DECR (315)


Nonterminals, with rules where they appear

    $accept (61)
        on left: 0
    program (62)
        on left: 1
        on right: 0
    units (63)
        on left: 2 3 4 5
        on right: 1 4 5
    function (64)
        on left: 6 7
        on right: 3 5
    PARMS (65)
        on left: 8 9
        on right: 6 9 22
    statements (66)
        on left: 10 11
        on right: 6 7 11 14 15 16 17
    statement (67)
        on left: 12 13 14 15 16 17 18 19 20
        on right: 10 11
    for_decl (68)
        on left: 21 22
        on right: 16
    declaration (69)
        on left: 23 24
        on right: 2 4 13
    IDENTIFIERS (70)
        on left: 25 26
        on right: 24 26
    PAS (71)
        on left: 27 28
        on right: 28 33
    expr (72)
        on left: 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73
        on right: 14 15 16 17 18 20 21 22 23 27 28 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73
    T (73)
        on left: 74 75 76 77 78
        on right: 6 7 8 9 21 22 23 24


State 0

    0 $accept: . program $end

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_BOOL    shift, and go to state 4
    T_VOID    shift, and go to state 5

    program      go to state 6
    units        go to state 7
    function     go to state 8
    declaration  go to state 9
    T            go to state 10


State 1

   75 T: T_CHAR .

    $default  reduce using rule 75 (T)


State 2

   74 T: T_INT .

    $default  reduce using rule 74 (T)


State 3

   77 T: T_STRING .

    $default  reduce using rule 77 (T)


State 4

   76 T: T_BOOL .

    $default  reduce using rule 76 (T)


State 5

   78 T: T_VOID .

    $default  reduce using rule 78 (T)


State 6

    0 $accept: program . $end

    $end  shift, and go to state 11


State 7

    1 program: units .
    4 units: units . declaration SEMICOLON
    5      | units . function

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_BOOL    shift, and go to state 4
    T_VOID    shift, and go to state 5

    $default  reduce using rule 1 (program)

    function     go to state 12
    declaration  go to state 13
    T            go to state 10


State 8

    3 units: function .

    $default  reduce using rule 3 (units)


State 9

    2 units: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 14


State 10

    6 function: T . IDENTIFIER LEFTBR PARMS RIGHTBR LBRACE statements RBRACE
    7         | T . IDENTIFIER LEFTBR RIGHTBR LBRACE statements RBRACE
   23 declaration: T . IDENTIFIER LOP_ASS expr
   24            | T . IDENTIFIERS

    IDENTIFIER  shift, and go to state 15

    IDENTIFIERS  go to state 16


State 11

    0 $accept: program $end .

    $default  accept


State 12

    5 units: units function .

    $default  reduce using rule 5 (units)


State 13

    4 units: units declaration . SEMICOLON

    SEMICOLON  shift, and go to state 17


State 14

    2 units: declaration SEMICOLON .

    $default  reduce using rule 2 (units)


State 15

    6 function: T IDENTIFIER . LEFTBR PARMS RIGHTBR LBRACE statements RBRACE
    7         | T IDENTIFIER . LEFTBR RIGHTBR LBRACE statements RBRACE
   23 declaration: T IDENTIFIER . LOP_ASS expr
   25 IDENTIFIERS: IDENTIFIER .

    LOP_ASS  shift, and go to state 18
    LEFTBR   shift, and go to state 19

    $default  reduce using rule 25 (IDENTIFIERS)


State 16

   24 declaration: T IDENTIFIERS .
   26 IDENTIFIERS: IDENTIFIERS . COMMA IDENTIFIER

    COMMA  shift, and go to state 20

    $default  reduce using rule 24 (declaration)


State 17

    4 units: units declaration SEMICOLON .

    $default  reduce using rule 4 (units)


State 18

   23 declaration: T IDENTIFIER LOP_ASS . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 33


State 19

    6 function: T IDENTIFIER LEFTBR . PARMS RIGHTBR LBRACE statements RBRACE
    7         | T IDENTIFIER LEFTBR . RIGHTBR LBRACE statements RBRACE

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_BOOL    shift, and go to state 4
    T_VOID    shift, and go to state 5
    RIGHTBR   shift, and go to state 34

    PARMS  go to state 35
    T      go to state 36


State 20

   26 IDENTIFIERS: IDENTIFIERS COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 37


State 21

   68 expr: BIT_AND . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 38


State 22

   65 expr: ADD . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 39


State 23

   64 expr: SUB . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 40


State 24

   67 expr: BIT_NOT . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 41


State 25

   66 expr: LOG_NOT . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 42


State 26

   69 expr: INCR . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 43


State 27

   70 expr: DECR . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 44


State 28

   73 expr: LEFTBR . expr RIGHTBR

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 45


State 29

   29 expr: IDENTIFIER .
   33     | IDENTIFIER . LEFTBR PAS RIGHTBR
   34     | IDENTIFIER . LEFTBR RIGHTBR

    LEFTBR  shift, and go to state 46

    $default  reduce using rule 29 (expr)


State 30

   30 expr: INTEGER .

    $default  reduce using rule 30 (expr)


State 31

   31 expr: CHAR .

    $default  reduce using rule 31 (expr)


State 32

   32 expr: STRING .

    $default  reduce using rule 32 (expr)


State 33

   23 declaration: T IDENTIFIER LOP_ASS expr .
   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    LOP_ASS  shift, and go to state 47
    ADD_ASS  shift, and go to state 48
    SUB_ASS  shift, and go to state 49
    MUL_ASS  shift, and go to state 50
    DIV_ASS  shift, and go to state 51
    SUR_ASS  shift, and go to state 52
    LS_ASS   shift, and go to state 53
    RS_ASS   shift, and go to state 54
    AND_ASS  shift, and go to state 55
    OR_ASS   shift, and go to state 56
    XOR_ASS  shift, and go to state 57
    LOG_OR   shift, and go to state 58
    LOG_AND  shift, and go to state 59
    BIT_OR   shift, and go to state 60
    BIT_XOR  shift, and go to state 61
    BIT_AND  shift, and go to state 62
    EQ       shift, and go to state 63
    UEQ      shift, and go to state 64
    GT       shift, and go to state 65
    LT       shift, and go to state 66
    GE       shift, and go to state 67
    LE       shift, and go to state 68
    LSHIFT   shift, and go to state 69
    RSHIFT   shift, and go to state 70
    ADD      shift, and go to state 71
    SUB      shift, and go to state 72
    MUL      shift, and go to state 73
    DIV      shift, and go to state 74
    SUR      shift, and go to state 75
    INCR     shift, and go to state 76
    DECR     shift, and go to state 77

    $default  reduce using rule 23 (declaration)


State 34

    7 function: T IDENTIFIER LEFTBR RIGHTBR . LBRACE statements RBRACE

    LBRACE  shift, and go to state 78


State 35

    6 function: T IDENTIFIER LEFTBR PARMS . RIGHTBR LBRACE statements RBRACE
    9 PARMS: PARMS . COMMA T IDENTIFIER

    RIGHTBR  shift, and go to state 79
    COMMA    shift, and go to state 80


State 36

    8 PARMS: T . IDENTIFIER

    IDENTIFIER  shift, and go to state 81


State 37

   26 IDENTIFIERS: IDENTIFIERS COMMA IDENTIFIER .

    $default  reduce using rule 26 (IDENTIFIERS)


State 38

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   68     | BIT_AND expr .
   71     | expr . INCR
   72     | expr . DECR

    INCR  shift, and go to state 76
    DECR  shift, and go to state 77

    $default  reduce using rule 68 (expr)


State 39

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   65     | ADD expr .
   71     | expr . INCR
   72     | expr . DECR

    INCR  shift, and go to state 76
    DECR  shift, and go to state 77

    $default  reduce using rule 65 (expr)


State 40

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   64     | SUB expr .
   71     | expr . INCR
   72     | expr . DECR

    INCR  shift, and go to state 76
    DECR  shift, and go to state 77

    $default  reduce using rule 64 (expr)


State 41

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   67     | BIT_NOT expr .
   71     | expr . INCR
   72     | expr . DECR

    INCR  shift, and go to state 76
    DECR  shift, and go to state 77

    $default  reduce using rule 67 (expr)


State 42

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   66     | LOG_NOT expr .
   71     | expr . INCR
   72     | expr . DECR

    INCR  shift, and go to state 76
    DECR  shift, and go to state 77

    $default  reduce using rule 66 (expr)


State 43

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   69     | INCR expr .
   71     | expr . INCR
   72     | expr . DECR

    INCR  shift, and go to state 76
    DECR  shift, and go to state 77

    $default  reduce using rule 69 (expr)


State 44

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   70     | DECR expr .
   71     | expr . INCR
   72     | expr . DECR

    INCR  shift, and go to state 76
    DECR  shift, and go to state 77

    $default  reduce using rule 70 (expr)


State 45

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR
   73     | LEFTBR expr . RIGHTBR

    LOP_ASS  shift, and go to state 47
    ADD_ASS  shift, and go to state 48
    SUB_ASS  shift, and go to state 49
    MUL_ASS  shift, and go to state 50
    DIV_ASS  shift, and go to state 51
    SUR_ASS  shift, and go to state 52
    LS_ASS   shift, and go to state 53
    RS_ASS   shift, and go to state 54
    AND_ASS  shift, and go to state 55
    OR_ASS   shift, and go to state 56
    XOR_ASS  shift, and go to state 57
    LOG_OR   shift, and go to state 58
    LOG_AND  shift, and go to state 59
    BIT_OR   shift, and go to state 60
    BIT_XOR  shift, and go to state 61
    BIT_AND  shift, and go to state 62
    EQ       shift, and go to state 63
    UEQ      shift, and go to state 64
    GT       shift, and go to state 65
    LT       shift, and go to state 66
    GE       shift, and go to state 67
    LE       shift, and go to state 68
    LSHIFT   shift, and go to state 69
    RSHIFT   shift, and go to state 70
    ADD      shift, and go to state 71
    SUB      shift, and go to state 72
    MUL      shift, and go to state 73
    DIV      shift, and go to state 74
    SUR      shift, and go to state 75
    INCR     shift, and go to state 76
    DECR     shift, and go to state 77
    RIGHTBR  shift, and go to state 82


State 46

   33 expr: IDENTIFIER LEFTBR . PAS RIGHTBR
   34     | IDENTIFIER LEFTBR . RIGHTBR

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    RIGHTBR     shift, and go to state 83
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    PAS   go to state 84
    expr  go to state 85


State 47

   53 expr: expr LOP_ASS . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 86


State 48

   54 expr: expr ADD_ASS . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 87


State 49

   55 expr: expr SUB_ASS . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 88


State 50

   56 expr: expr MUL_ASS . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 89


State 51

   57 expr: expr DIV_ASS . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 90


State 52

   58 expr: expr SUR_ASS . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 91


State 53

   59 expr: expr LS_ASS . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 92


State 54

   60 expr: expr RS_ASS . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 93


State 55

   62 expr: expr AND_ASS . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 94


State 56

   61 expr: expr OR_ASS . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 95


State 57

   63 expr: expr XOR_ASS . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 96


State 58

   52 expr: expr LOG_OR . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 97


State 59

   51 expr: expr LOG_AND . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 98


State 60

   43 expr: expr BIT_OR . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 99


State 61

   44 expr: expr BIT_XOR . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 100


State 62

   42 expr: expr BIT_AND . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 101


State 63

   45 expr: expr EQ . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 102


State 64

   46 expr: expr UEQ . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 103


State 65

   48 expr: expr GT . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 104


State 66

   47 expr: expr LT . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 105


State 67

   50 expr: expr GE . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 106


State 68

   49 expr: expr LE . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 107


State 69

   40 expr: expr LSHIFT . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 108


State 70

   41 expr: expr RSHIFT . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 109


State 71

   35 expr: expr ADD . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 110


State 72

   36 expr: expr SUB . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 111


State 73

   37 expr: expr MUL . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 112


State 74

   38 expr: expr DIV . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 113


State 75

   39 expr: expr SUR . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 114


State 76

   71 expr: expr INCR .

    $default  reduce using rule 71 (expr)


State 77

   72 expr: expr DECR .

    $default  reduce using rule 72 (expr)


State 78

    7 function: T IDENTIFIER LEFTBR RIGHTBR LBRACE . statements RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    SEMICOLON   shift, and go to state 115
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    IF          shift, and go to state 116
    WHILE       shift, and go to state 117
    FOR         shift, and go to state 118
    RETURN      shift, and go to state 119

    statements   go to state 120
    statement    go to state 121
    declaration  go to state 122
    expr         go to state 123
    T            go to state 124


State 79

    6 function: T IDENTIFIER LEFTBR PARMS RIGHTBR . LBRACE statements RBRACE

    LBRACE  shift, and go to state 125


State 80

    9 PARMS: PARMS COMMA . T IDENTIFIER

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_BOOL    shift, and go to state 4
    T_VOID    shift, and go to state 5

    T  go to state 126


State 81

    8 PARMS: T IDENTIFIER .

    $default  reduce using rule 8 (PARMS)


State 82

   73 expr: LEFTBR expr RIGHTBR .

    $default  reduce using rule 73 (expr)


State 83

   34 expr: IDENTIFIER LEFTBR RIGHTBR .

    $default  reduce using rule 34 (expr)


State 84

   28 PAS: PAS . COMMA expr
   33 expr: IDENTIFIER LEFTBR PAS . RIGHTBR

    RIGHTBR  shift, and go to state 127
    COMMA    shift, and go to state 128


State 85

   27 PAS: expr .
   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    LOP_ASS  shift, and go to state 47
    ADD_ASS  shift, and go to state 48
    SUB_ASS  shift, and go to state 49
    MUL_ASS  shift, and go to state 50
    DIV_ASS  shift, and go to state 51
    SUR_ASS  shift, and go to state 52
    LS_ASS   shift, and go to state 53
    RS_ASS   shift, and go to state 54
    AND_ASS  shift, and go to state 55
    OR_ASS   shift, and go to state 56
    XOR_ASS  shift, and go to state 57
    LOG_OR   shift, and go to state 58
    LOG_AND  shift, and go to state 59
    BIT_OR   shift, and go to state 60
    BIT_XOR  shift, and go to state 61
    BIT_AND  shift, and go to state 62
    EQ       shift, and go to state 63
    UEQ      shift, and go to state 64
    GT       shift, and go to state 65
    LT       shift, and go to state 66
    GE       shift, and go to state 67
    LE       shift, and go to state 68
    LSHIFT   shift, and go to state 69
    RSHIFT   shift, and go to state 70
    ADD      shift, and go to state 71
    SUB      shift, and go to state 72
    MUL      shift, and go to state 73
    DIV      shift, and go to state 74
    SUR      shift, and go to state 75
    INCR     shift, and go to state 76
    DECR     shift, and go to state 77

    $default  reduce using rule 27 (PAS)


State 86

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   53     | expr LOP_ASS expr .
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    LOP_ASS  shift, and go to state 47
    ADD_ASS  shift, and go to state 48
    SUB_ASS  shift, and go to state 49
    MUL_ASS  shift, and go to state 50
    DIV_ASS  shift, and go to state 51
    SUR_ASS  shift, and go to state 52
    LS_ASS   shift, and go to state 53
    RS_ASS   shift, and go to state 54
    AND_ASS  shift, and go to state 55
    OR_ASS   shift, and go to state 56
    XOR_ASS  shift, and go to state 57
    LOG_OR   shift, and go to state 58
    LOG_AND  shift, and go to state 59
    BIT_OR   shift, and go to state 60
    BIT_XOR  shift, and go to state 61
    BIT_AND  shift, and go to state 62
    EQ       shift, and go to state 63
    UEQ      shift, and go to state 64
    GT       shift, and go to state 65
    LT       shift, and go to state 66
    GE       shift, and go to state 67
    LE       shift, and go to state 68
    LSHIFT   shift, and go to state 69
    RSHIFT   shift, and go to state 70
    ADD      shift, and go to state 71
    SUB      shift, and go to state 72
    MUL      shift, and go to state 73
    DIV      shift, and go to state 74
    SUR      shift, and go to state 75
    INCR     shift, and go to state 76
    DECR     shift, and go to state 77

    $default  reduce using rule 53 (expr)


State 87

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   54     | expr ADD_ASS expr .
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    LOP_ASS  shift, and go to state 47
    ADD_ASS  shift, and go to state 48
    SUB_ASS  shift, and go to state 49
    MUL_ASS  shift, and go to state 50
    DIV_ASS  shift, and go to state 51
    SUR_ASS  shift, and go to state 52
    LS_ASS   shift, and go to state 53
    RS_ASS   shift, and go to state 54
    AND_ASS  shift, and go to state 55
    OR_ASS   shift, and go to state 56
    XOR_ASS  shift, and go to state 57
    LOG_OR   shift, and go to state 58
    LOG_AND  shift, and go to state 59
    BIT_OR   shift, and go to state 60
    BIT_XOR  shift, and go to state 61
    BIT_AND  shift, and go to state 62
    EQ       shift, and go to state 63
    UEQ      shift, and go to state 64
    GT       shift, and go to state 65
    LT       shift, and go to state 66
    GE       shift, and go to state 67
    LE       shift, and go to state 68
    LSHIFT   shift, and go to state 69
    RSHIFT   shift, and go to state 70
    ADD      shift, and go to state 71
    SUB      shift, and go to state 72
    MUL      shift, and go to state 73
    DIV      shift, and go to state 74
    SUR      shift, and go to state 75
    INCR     shift, and go to state 76
    DECR     shift, and go to state 77

    $default  reduce using rule 54 (expr)


State 88

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   55     | expr SUB_ASS expr .
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    LOP_ASS  shift, and go to state 47
    ADD_ASS  shift, and go to state 48
    SUB_ASS  shift, and go to state 49
    MUL_ASS  shift, and go to state 50
    DIV_ASS  shift, and go to state 51
    SUR_ASS  shift, and go to state 52
    LS_ASS   shift, and go to state 53
    RS_ASS   shift, and go to state 54
    AND_ASS  shift, and go to state 55
    OR_ASS   shift, and go to state 56
    XOR_ASS  shift, and go to state 57
    LOG_OR   shift, and go to state 58
    LOG_AND  shift, and go to state 59
    BIT_OR   shift, and go to state 60
    BIT_XOR  shift, and go to state 61
    BIT_AND  shift, and go to state 62
    EQ       shift, and go to state 63
    UEQ      shift, and go to state 64
    GT       shift, and go to state 65
    LT       shift, and go to state 66
    GE       shift, and go to state 67
    LE       shift, and go to state 68
    LSHIFT   shift, and go to state 69
    RSHIFT   shift, and go to state 70
    ADD      shift, and go to state 71
    SUB      shift, and go to state 72
    MUL      shift, and go to state 73
    DIV      shift, and go to state 74
    SUR      shift, and go to state 75
    INCR     shift, and go to state 76
    DECR     shift, and go to state 77

    $default  reduce using rule 55 (expr)


State 89

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   56     | expr MUL_ASS expr .
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    LOP_ASS  shift, and go to state 47
    ADD_ASS  shift, and go to state 48
    SUB_ASS  shift, and go to state 49
    MUL_ASS  shift, and go to state 50
    DIV_ASS  shift, and go to state 51
    SUR_ASS  shift, and go to state 52
    LS_ASS   shift, and go to state 53
    RS_ASS   shift, and go to state 54
    AND_ASS  shift, and go to state 55
    OR_ASS   shift, and go to state 56
    XOR_ASS  shift, and go to state 57
    LOG_OR   shift, and go to state 58
    LOG_AND  shift, and go to state 59
    BIT_OR   shift, and go to state 60
    BIT_XOR  shift, and go to state 61
    BIT_AND  shift, and go to state 62
    EQ       shift, and go to state 63
    UEQ      shift, and go to state 64
    GT       shift, and go to state 65
    LT       shift, and go to state 66
    GE       shift, and go to state 67
    LE       shift, and go to state 68
    LSHIFT   shift, and go to state 69
    RSHIFT   shift, and go to state 70
    ADD      shift, and go to state 71
    SUB      shift, and go to state 72
    MUL      shift, and go to state 73
    DIV      shift, and go to state 74
    SUR      shift, and go to state 75
    INCR     shift, and go to state 76
    DECR     shift, and go to state 77

    $default  reduce using rule 56 (expr)


State 90

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   57     | expr DIV_ASS expr .
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    LOP_ASS  shift, and go to state 47
    ADD_ASS  shift, and go to state 48
    SUB_ASS  shift, and go to state 49
    MUL_ASS  shift, and go to state 50
    DIV_ASS  shift, and go to state 51
    SUR_ASS  shift, and go to state 52
    LS_ASS   shift, and go to state 53
    RS_ASS   shift, and go to state 54
    AND_ASS  shift, and go to state 55
    OR_ASS   shift, and go to state 56
    XOR_ASS  shift, and go to state 57
    LOG_OR   shift, and go to state 58
    LOG_AND  shift, and go to state 59
    BIT_OR   shift, and go to state 60
    BIT_XOR  shift, and go to state 61
    BIT_AND  shift, and go to state 62
    EQ       shift, and go to state 63
    UEQ      shift, and go to state 64
    GT       shift, and go to state 65
    LT       shift, and go to state 66
    GE       shift, and go to state 67
    LE       shift, and go to state 68
    LSHIFT   shift, and go to state 69
    RSHIFT   shift, and go to state 70
    ADD      shift, and go to state 71
    SUB      shift, and go to state 72
    MUL      shift, and go to state 73
    DIV      shift, and go to state 74
    SUR      shift, and go to state 75
    INCR     shift, and go to state 76
    DECR     shift, and go to state 77

    $default  reduce using rule 57 (expr)


State 91

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   58     | expr SUR_ASS expr .
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    LOP_ASS  shift, and go to state 47
    ADD_ASS  shift, and go to state 48
    SUB_ASS  shift, and go to state 49
    MUL_ASS  shift, and go to state 50
    DIV_ASS  shift, and go to state 51
    SUR_ASS  shift, and go to state 52
    LS_ASS   shift, and go to state 53
    RS_ASS   shift, and go to state 54
    AND_ASS  shift, and go to state 55
    OR_ASS   shift, and go to state 56
    XOR_ASS  shift, and go to state 57
    LOG_OR   shift, and go to state 58
    LOG_AND  shift, and go to state 59
    BIT_OR   shift, and go to state 60
    BIT_XOR  shift, and go to state 61
    BIT_AND  shift, and go to state 62
    EQ       shift, and go to state 63
    UEQ      shift, and go to state 64
    GT       shift, and go to state 65
    LT       shift, and go to state 66
    GE       shift, and go to state 67
    LE       shift, and go to state 68
    LSHIFT   shift, and go to state 69
    RSHIFT   shift, and go to state 70
    ADD      shift, and go to state 71
    SUB      shift, and go to state 72
    MUL      shift, and go to state 73
    DIV      shift, and go to state 74
    SUR      shift, and go to state 75
    INCR     shift, and go to state 76
    DECR     shift, and go to state 77

    $default  reduce using rule 58 (expr)


State 92

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   59     | expr LS_ASS expr .
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    LOP_ASS  shift, and go to state 47
    ADD_ASS  shift, and go to state 48
    SUB_ASS  shift, and go to state 49
    MUL_ASS  shift, and go to state 50
    DIV_ASS  shift, and go to state 51
    SUR_ASS  shift, and go to state 52
    LS_ASS   shift, and go to state 53
    RS_ASS   shift, and go to state 54
    AND_ASS  shift, and go to state 55
    OR_ASS   shift, and go to state 56
    XOR_ASS  shift, and go to state 57
    LOG_OR   shift, and go to state 58
    LOG_AND  shift, and go to state 59
    BIT_OR   shift, and go to state 60
    BIT_XOR  shift, and go to state 61
    BIT_AND  shift, and go to state 62
    EQ       shift, and go to state 63
    UEQ      shift, and go to state 64
    GT       shift, and go to state 65
    LT       shift, and go to state 66
    GE       shift, and go to state 67
    LE       shift, and go to state 68
    LSHIFT   shift, and go to state 69
    RSHIFT   shift, and go to state 70
    ADD      shift, and go to state 71
    SUB      shift, and go to state 72
    MUL      shift, and go to state 73
    DIV      shift, and go to state 74
    SUR      shift, and go to state 75
    INCR     shift, and go to state 76
    DECR     shift, and go to state 77

    $default  reduce using rule 59 (expr)


State 93

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   60     | expr RS_ASS expr .
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    LOP_ASS  shift, and go to state 47
    ADD_ASS  shift, and go to state 48
    SUB_ASS  shift, and go to state 49
    MUL_ASS  shift, and go to state 50
    DIV_ASS  shift, and go to state 51
    SUR_ASS  shift, and go to state 52
    LS_ASS   shift, and go to state 53
    RS_ASS   shift, and go to state 54
    AND_ASS  shift, and go to state 55
    OR_ASS   shift, and go to state 56
    XOR_ASS  shift, and go to state 57
    LOG_OR   shift, and go to state 58
    LOG_AND  shift, and go to state 59
    BIT_OR   shift, and go to state 60
    BIT_XOR  shift, and go to state 61
    BIT_AND  shift, and go to state 62
    EQ       shift, and go to state 63
    UEQ      shift, and go to state 64
    GT       shift, and go to state 65
    LT       shift, and go to state 66
    GE       shift, and go to state 67
    LE       shift, and go to state 68
    LSHIFT   shift, and go to state 69
    RSHIFT   shift, and go to state 70
    ADD      shift, and go to state 71
    SUB      shift, and go to state 72
    MUL      shift, and go to state 73
    DIV      shift, and go to state 74
    SUR      shift, and go to state 75
    INCR     shift, and go to state 76
    DECR     shift, and go to state 77

    $default  reduce using rule 60 (expr)


State 94

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   62     | expr AND_ASS expr .
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    LOP_ASS  shift, and go to state 47
    ADD_ASS  shift, and go to state 48
    SUB_ASS  shift, and go to state 49
    MUL_ASS  shift, and go to state 50
    DIV_ASS  shift, and go to state 51
    SUR_ASS  shift, and go to state 52
    LS_ASS   shift, and go to state 53
    RS_ASS   shift, and go to state 54
    AND_ASS  shift, and go to state 55
    OR_ASS   shift, and go to state 56
    XOR_ASS  shift, and go to state 57
    LOG_OR   shift, and go to state 58
    LOG_AND  shift, and go to state 59
    BIT_OR   shift, and go to state 60
    BIT_XOR  shift, and go to state 61
    BIT_AND  shift, and go to state 62
    EQ       shift, and go to state 63
    UEQ      shift, and go to state 64
    GT       shift, and go to state 65
    LT       shift, and go to state 66
    GE       shift, and go to state 67
    LE       shift, and go to state 68
    LSHIFT   shift, and go to state 69
    RSHIFT   shift, and go to state 70
    ADD      shift, and go to state 71
    SUB      shift, and go to state 72
    MUL      shift, and go to state 73
    DIV      shift, and go to state 74
    SUR      shift, and go to state 75
    INCR     shift, and go to state 76
    DECR     shift, and go to state 77

    $default  reduce using rule 62 (expr)


State 95

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   61     | expr OR_ASS expr .
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    LOP_ASS  shift, and go to state 47
    ADD_ASS  shift, and go to state 48
    SUB_ASS  shift, and go to state 49
    MUL_ASS  shift, and go to state 50
    DIV_ASS  shift, and go to state 51
    SUR_ASS  shift, and go to state 52
    LS_ASS   shift, and go to state 53
    RS_ASS   shift, and go to state 54
    AND_ASS  shift, and go to state 55
    OR_ASS   shift, and go to state 56
    XOR_ASS  shift, and go to state 57
    LOG_OR   shift, and go to state 58
    LOG_AND  shift, and go to state 59
    BIT_OR   shift, and go to state 60
    BIT_XOR  shift, and go to state 61
    BIT_AND  shift, and go to state 62
    EQ       shift, and go to state 63
    UEQ      shift, and go to state 64
    GT       shift, and go to state 65
    LT       shift, and go to state 66
    GE       shift, and go to state 67
    LE       shift, and go to state 68
    LSHIFT   shift, and go to state 69
    RSHIFT   shift, and go to state 70
    ADD      shift, and go to state 71
    SUB      shift, and go to state 72
    MUL      shift, and go to state 73
    DIV      shift, and go to state 74
    SUR      shift, and go to state 75
    INCR     shift, and go to state 76
    DECR     shift, and go to state 77

    $default  reduce using rule 61 (expr)


State 96

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   63     | expr XOR_ASS expr .
   71     | expr . INCR
   72     | expr . DECR

    LOP_ASS  shift, and go to state 47
    ADD_ASS  shift, and go to state 48
    SUB_ASS  shift, and go to state 49
    MUL_ASS  shift, and go to state 50
    DIV_ASS  shift, and go to state 51
    SUR_ASS  shift, and go to state 52
    LS_ASS   shift, and go to state 53
    RS_ASS   shift, and go to state 54
    AND_ASS  shift, and go to state 55
    OR_ASS   shift, and go to state 56
    XOR_ASS  shift, and go to state 57
    LOG_OR   shift, and go to state 58
    LOG_AND  shift, and go to state 59
    BIT_OR   shift, and go to state 60
    BIT_XOR  shift, and go to state 61
    BIT_AND  shift, and go to state 62
    EQ       shift, and go to state 63
    UEQ      shift, and go to state 64
    GT       shift, and go to state 65
    LT       shift, and go to state 66
    GE       shift, and go to state 67
    LE       shift, and go to state 68
    LSHIFT   shift, and go to state 69
    RSHIFT   shift, and go to state 70
    ADD      shift, and go to state 71
    SUB      shift, and go to state 72
    MUL      shift, and go to state 73
    DIV      shift, and go to state 74
    SUR      shift, and go to state 75
    INCR     shift, and go to state 76
    DECR     shift, and go to state 77

    $default  reduce using rule 63 (expr)


State 97

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   52     | expr LOG_OR expr .
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    LOG_AND  shift, and go to state 59
    BIT_OR   shift, and go to state 60
    BIT_XOR  shift, and go to state 61
    BIT_AND  shift, and go to state 62
    EQ       shift, and go to state 63
    UEQ      shift, and go to state 64
    GT       shift, and go to state 65
    LT       shift, and go to state 66
    GE       shift, and go to state 67
    LE       shift, and go to state 68
    LSHIFT   shift, and go to state 69
    RSHIFT   shift, and go to state 70
    ADD      shift, and go to state 71
    SUB      shift, and go to state 72
    MUL      shift, and go to state 73
    DIV      shift, and go to state 74
    SUR      shift, and go to state 75
    INCR     shift, and go to state 76
    DECR     shift, and go to state 77

    $default  reduce using rule 52 (expr)


State 98

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   51     | expr LOG_AND expr .
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    BIT_OR   shift, and go to state 60
    BIT_XOR  shift, and go to state 61
    BIT_AND  shift, and go to state 62
    EQ       shift, and go to state 63
    UEQ      shift, and go to state 64
    GT       shift, and go to state 65
    LT       shift, and go to state 66
    GE       shift, and go to state 67
    LE       shift, and go to state 68
    LSHIFT   shift, and go to state 69
    RSHIFT   shift, and go to state 70
    ADD      shift, and go to state 71
    SUB      shift, and go to state 72
    MUL      shift, and go to state 73
    DIV      shift, and go to state 74
    SUR      shift, and go to state 75
    INCR     shift, and go to state 76
    DECR     shift, and go to state 77

    $default  reduce using rule 51 (expr)


State 99

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   43     | expr BIT_OR expr .
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    BIT_XOR  shift, and go to state 61
    BIT_AND  shift, and go to state 62
    EQ       shift, and go to state 63
    UEQ      shift, and go to state 64
    GT       shift, and go to state 65
    LT       shift, and go to state 66
    GE       shift, and go to state 67
    LE       shift, and go to state 68
    LSHIFT   shift, and go to state 69
    RSHIFT   shift, and go to state 70
    ADD      shift, and go to state 71
    SUB      shift, and go to state 72
    MUL      shift, and go to state 73
    DIV      shift, and go to state 74
    SUR      shift, and go to state 75
    INCR     shift, and go to state 76
    DECR     shift, and go to state 77

    $default  reduce using rule 43 (expr)


State 100

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   44     | expr BIT_XOR expr .
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    BIT_AND  shift, and go to state 62
    EQ       shift, and go to state 63
    UEQ      shift, and go to state 64
    GT       shift, and go to state 65
    LT       shift, and go to state 66
    GE       shift, and go to state 67
    LE       shift, and go to state 68
    LSHIFT   shift, and go to state 69
    RSHIFT   shift, and go to state 70
    ADD      shift, and go to state 71
    SUB      shift, and go to state 72
    MUL      shift, and go to state 73
    DIV      shift, and go to state 74
    SUR      shift, and go to state 75
    INCR     shift, and go to state 76
    DECR     shift, and go to state 77

    $default  reduce using rule 44 (expr)


State 101

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   42     | expr BIT_AND expr .
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    EQ      shift, and go to state 63
    UEQ     shift, and go to state 64
    GT      shift, and go to state 65
    LT      shift, and go to state 66
    GE      shift, and go to state 67
    LE      shift, and go to state 68
    LSHIFT  shift, and go to state 69
    RSHIFT  shift, and go to state 70
    ADD     shift, and go to state 71
    SUB     shift, and go to state 72
    MUL     shift, and go to state 73
    DIV     shift, and go to state 74
    SUR     shift, and go to state 75
    INCR    shift, and go to state 76
    DECR    shift, and go to state 77

    $default  reduce using rule 42 (expr)


State 102

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   45     | expr EQ expr .
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    GT      shift, and go to state 65
    LT      shift, and go to state 66
    GE      shift, and go to state 67
    LE      shift, and go to state 68
    LSHIFT  shift, and go to state 69
    RSHIFT  shift, and go to state 70
    ADD     shift, and go to state 71
    SUB     shift, and go to state 72
    MUL     shift, and go to state 73
    DIV     shift, and go to state 74
    SUR     shift, and go to state 75
    INCR    shift, and go to state 76
    DECR    shift, and go to state 77

    $default  reduce using rule 45 (expr)


State 103

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   46     | expr UEQ expr .
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    GT      shift, and go to state 65
    LT      shift, and go to state 66
    GE      shift, and go to state 67
    LE      shift, and go to state 68
    LSHIFT  shift, and go to state 69
    RSHIFT  shift, and go to state 70
    ADD     shift, and go to state 71
    SUB     shift, and go to state 72
    MUL     shift, and go to state 73
    DIV     shift, and go to state 74
    SUR     shift, and go to state 75
    INCR    shift, and go to state 76
    DECR    shift, and go to state 77

    $default  reduce using rule 46 (expr)


State 104

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   48     | expr GT expr .
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    LSHIFT  shift, and go to state 69
    RSHIFT  shift, and go to state 70
    ADD     shift, and go to state 71
    SUB     shift, and go to state 72
    MUL     shift, and go to state 73
    DIV     shift, and go to state 74
    SUR     shift, and go to state 75
    INCR    shift, and go to state 76
    DECR    shift, and go to state 77

    $default  reduce using rule 48 (expr)


State 105

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   47     | expr LT expr .
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    LSHIFT  shift, and go to state 69
    RSHIFT  shift, and go to state 70
    ADD     shift, and go to state 71
    SUB     shift, and go to state 72
    MUL     shift, and go to state 73
    DIV     shift, and go to state 74
    SUR     shift, and go to state 75
    INCR    shift, and go to state 76
    DECR    shift, and go to state 77

    $default  reduce using rule 47 (expr)


State 106

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   50     | expr GE expr .
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    LSHIFT  shift, and go to state 69
    RSHIFT  shift, and go to state 70
    ADD     shift, and go to state 71
    SUB     shift, and go to state 72
    MUL     shift, and go to state 73
    DIV     shift, and go to state 74
    SUR     shift, and go to state 75
    INCR    shift, and go to state 76
    DECR    shift, and go to state 77

    $default  reduce using rule 50 (expr)


State 107

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   49     | expr LE expr .
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    LSHIFT  shift, and go to state 69
    RSHIFT  shift, and go to state 70
    ADD     shift, and go to state 71
    SUB     shift, and go to state 72
    MUL     shift, and go to state 73
    DIV     shift, and go to state 74
    SUR     shift, and go to state 75
    INCR    shift, and go to state 76
    DECR    shift, and go to state 77

    $default  reduce using rule 49 (expr)


State 108

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   40     | expr LSHIFT expr .
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    ADD   shift, and go to state 71
    SUB   shift, and go to state 72
    MUL   shift, and go to state 73
    DIV   shift, and go to state 74
    SUR   shift, and go to state 75
    INCR  shift, and go to state 76
    DECR  shift, and go to state 77

    $default  reduce using rule 40 (expr)


State 109

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   41     | expr RSHIFT expr .
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    ADD   shift, and go to state 71
    SUB   shift, and go to state 72
    MUL   shift, and go to state 73
    DIV   shift, and go to state 74
    SUR   shift, and go to state 75
    INCR  shift, and go to state 76
    DECR  shift, and go to state 77

    $default  reduce using rule 41 (expr)


State 110

   35 expr: expr . ADD expr
   35     | expr ADD expr .
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    MUL   shift, and go to state 73
    DIV   shift, and go to state 74
    SUR   shift, and go to state 75
    INCR  shift, and go to state 76
    DECR  shift, and go to state 77

    $default  reduce using rule 35 (expr)


State 111

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   36     | expr SUB expr .
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    MUL   shift, and go to state 73
    DIV   shift, and go to state 74
    SUR   shift, and go to state 75
    INCR  shift, and go to state 76
    DECR  shift, and go to state 77

    $default  reduce using rule 36 (expr)


State 112

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   37     | expr MUL expr .
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    INCR  shift, and go to state 76
    DECR  shift, and go to state 77

    $default  reduce using rule 37 (expr)


State 113

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   38     | expr DIV expr .
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    INCR  shift, and go to state 76
    DECR  shift, and go to state 77

    $default  reduce using rule 38 (expr)


State 114

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   39     | expr SUR expr .
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    INCR  shift, and go to state 76
    DECR  shift, and go to state 77

    $default  reduce using rule 39 (expr)


State 115

   12 statement: SEMICOLON .

    $default  reduce using rule 12 (statement)


State 116

   17 statement: IF . LEFTBR expr RIGHTBR LBRACE statements RBRACE

    LEFTBR  shift, and go to state 129


State 117

   14 statement: WHILE . LEFTBR expr RIGHTBR LBRACE statements RBRACE

    LEFTBR  shift, and go to state 130


State 118

   15 statement: FOR . LEFTBR expr SEMICOLON expr SEMICOLON expr RIGHTBR LBRACE statements RBRACE
   16          | FOR . LEFTBR for_decl SEMICOLON expr SEMICOLON expr RIGHTBR LBRACE statements RBRACE

    LEFTBR  shift, and go to state 131


State 119

   18 statement: RETURN . expr SEMICOLON
   19          | RETURN . SEMICOLON

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    SEMICOLON   shift, and go to state 132
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 133


State 120

    7 function: T IDENTIFIER LEFTBR RIGHTBR LBRACE statements . RBRACE
   11 statements: statements . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    RBRACE      shift, and go to state 134
    SEMICOLON   shift, and go to state 115
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    IF          shift, and go to state 116
    WHILE       shift, and go to state 117
    FOR         shift, and go to state 118
    RETURN      shift, and go to state 119

    statement    go to state 135
    declaration  go to state 122
    expr         go to state 123
    T            go to state 124


State 121

   10 statements: statement .

    $default  reduce using rule 10 (statements)


State 122

   13 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 136


State 123

   20 statement: expr . SEMICOLON
   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    LOP_ASS    shift, and go to state 47
    ADD_ASS    shift, and go to state 48
    SUB_ASS    shift, and go to state 49
    MUL_ASS    shift, and go to state 50
    DIV_ASS    shift, and go to state 51
    SUR_ASS    shift, and go to state 52
    LS_ASS     shift, and go to state 53
    RS_ASS     shift, and go to state 54
    AND_ASS    shift, and go to state 55
    OR_ASS     shift, and go to state 56
    XOR_ASS    shift, and go to state 57
    LOG_OR     shift, and go to state 58
    LOG_AND    shift, and go to state 59
    BIT_OR     shift, and go to state 60
    BIT_XOR    shift, and go to state 61
    BIT_AND    shift, and go to state 62
    EQ         shift, and go to state 63
    UEQ        shift, and go to state 64
    GT         shift, and go to state 65
    LT         shift, and go to state 66
    GE         shift, and go to state 67
    LE         shift, and go to state 68
    LSHIFT     shift, and go to state 69
    RSHIFT     shift, and go to state 70
    ADD        shift, and go to state 71
    SUB        shift, and go to state 72
    MUL        shift, and go to state 73
    DIV        shift, and go to state 74
    SUR        shift, and go to state 75
    INCR       shift, and go to state 76
    DECR       shift, and go to state 77
    SEMICOLON  shift, and go to state 137


State 124

   23 declaration: T . IDENTIFIER LOP_ASS expr
   24            | T . IDENTIFIERS

    IDENTIFIER  shift, and go to state 138

    IDENTIFIERS  go to state 16


State 125

    6 function: T IDENTIFIER LEFTBR PARMS RIGHTBR LBRACE . statements RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    SEMICOLON   shift, and go to state 115
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    IF          shift, and go to state 116
    WHILE       shift, and go to state 117
    FOR         shift, and go to state 118
    RETURN      shift, and go to state 119

    statements   go to state 139
    statement    go to state 121
    declaration  go to state 122
    expr         go to state 123
    T            go to state 124


State 126

    9 PARMS: PARMS COMMA T . IDENTIFIER

    IDENTIFIER  shift, and go to state 140


State 127

   33 expr: IDENTIFIER LEFTBR PAS RIGHTBR .

    $default  reduce using rule 33 (expr)


State 128

   28 PAS: PAS COMMA . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 141


State 129

   17 statement: IF LEFTBR . expr RIGHTBR LBRACE statements RBRACE

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 142


State 130

   14 statement: WHILE LEFTBR . expr RIGHTBR LBRACE statements RBRACE

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 143


State 131

   15 statement: FOR LEFTBR . expr SEMICOLON expr SEMICOLON expr RIGHTBR LBRACE statements RBRACE
   16          | FOR LEFTBR . for_decl SEMICOLON expr SEMICOLON expr RIGHTBR LBRACE statements RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    PARMS     go to state 144
    for_decl  go to state 145
    expr      go to state 146
    T         go to state 147


State 132

   19 statement: RETURN SEMICOLON .

    $default  reduce using rule 19 (statement)


State 133

   18 statement: RETURN expr . SEMICOLON
   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    LOP_ASS    shift, and go to state 47
    ADD_ASS    shift, and go to state 48
    SUB_ASS    shift, and go to state 49
    MUL_ASS    shift, and go to state 50
    DIV_ASS    shift, and go to state 51
    SUR_ASS    shift, and go to state 52
    LS_ASS     shift, and go to state 53
    RS_ASS     shift, and go to state 54
    AND_ASS    shift, and go to state 55
    OR_ASS     shift, and go to state 56
    XOR_ASS    shift, and go to state 57
    LOG_OR     shift, and go to state 58
    LOG_AND    shift, and go to state 59
    BIT_OR     shift, and go to state 60
    BIT_XOR    shift, and go to state 61
    BIT_AND    shift, and go to state 62
    EQ         shift, and go to state 63
    UEQ        shift, and go to state 64
    GT         shift, and go to state 65
    LT         shift, and go to state 66
    GE         shift, and go to state 67
    LE         shift, and go to state 68
    LSHIFT     shift, and go to state 69
    RSHIFT     shift, and go to state 70
    ADD        shift, and go to state 71
    SUB        shift, and go to state 72
    MUL        shift, and go to state 73
    DIV        shift, and go to state 74
    SUR        shift, and go to state 75
    INCR       shift, and go to state 76
    DECR       shift, and go to state 77
    SEMICOLON  shift, and go to state 148


State 134

    7 function: T IDENTIFIER LEFTBR RIGHTBR LBRACE statements RBRACE .

    $default  reduce using rule 7 (function)


State 135

   11 statements: statements statement .

    $default  reduce using rule 11 (statements)


State 136

   13 statement: declaration SEMICOLON .

    $default  reduce using rule 13 (statement)


State 137

   20 statement: expr SEMICOLON .

    $default  reduce using rule 20 (statement)


State 138

   23 declaration: T IDENTIFIER . LOP_ASS expr
   25 IDENTIFIERS: IDENTIFIER .

    LOP_ASS  shift, and go to state 18

    $default  reduce using rule 25 (IDENTIFIERS)


State 139

    6 function: T IDENTIFIER LEFTBR PARMS RIGHTBR LBRACE statements . RBRACE
   11 statements: statements . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    RBRACE      shift, and go to state 149
    SEMICOLON   shift, and go to state 115
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    IF          shift, and go to state 116
    WHILE       shift, and go to state 117
    FOR         shift, and go to state 118
    RETURN      shift, and go to state 119

    statement    go to state 135
    declaration  go to state 122
    expr         go to state 123
    T            go to state 124


State 140

    9 PARMS: PARMS COMMA T IDENTIFIER .

    $default  reduce using rule 9 (PARMS)


State 141

   28 PAS: PAS COMMA expr .
   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    LOP_ASS  shift, and go to state 47
    ADD_ASS  shift, and go to state 48
    SUB_ASS  shift, and go to state 49
    MUL_ASS  shift, and go to state 50
    DIV_ASS  shift, and go to state 51
    SUR_ASS  shift, and go to state 52
    LS_ASS   shift, and go to state 53
    RS_ASS   shift, and go to state 54
    AND_ASS  shift, and go to state 55
    OR_ASS   shift, and go to state 56
    XOR_ASS  shift, and go to state 57
    LOG_OR   shift, and go to state 58
    LOG_AND  shift, and go to state 59
    BIT_OR   shift, and go to state 60
    BIT_XOR  shift, and go to state 61
    BIT_AND  shift, and go to state 62
    EQ       shift, and go to state 63
    UEQ      shift, and go to state 64
    GT       shift, and go to state 65
    LT       shift, and go to state 66
    GE       shift, and go to state 67
    LE       shift, and go to state 68
    LSHIFT   shift, and go to state 69
    RSHIFT   shift, and go to state 70
    ADD      shift, and go to state 71
    SUB      shift, and go to state 72
    MUL      shift, and go to state 73
    DIV      shift, and go to state 74
    SUR      shift, and go to state 75
    INCR     shift, and go to state 76
    DECR     shift, and go to state 77

    $default  reduce using rule 28 (PAS)


State 142

   17 statement: IF LEFTBR expr . RIGHTBR LBRACE statements RBRACE
   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    LOP_ASS  shift, and go to state 47
    ADD_ASS  shift, and go to state 48
    SUB_ASS  shift, and go to state 49
    MUL_ASS  shift, and go to state 50
    DIV_ASS  shift, and go to state 51
    SUR_ASS  shift, and go to state 52
    LS_ASS   shift, and go to state 53
    RS_ASS   shift, and go to state 54
    AND_ASS  shift, and go to state 55
    OR_ASS   shift, and go to state 56
    XOR_ASS  shift, and go to state 57
    LOG_OR   shift, and go to state 58
    LOG_AND  shift, and go to state 59
    BIT_OR   shift, and go to state 60
    BIT_XOR  shift, and go to state 61
    BIT_AND  shift, and go to state 62
    EQ       shift, and go to state 63
    UEQ      shift, and go to state 64
    GT       shift, and go to state 65
    LT       shift, and go to state 66
    GE       shift, and go to state 67
    LE       shift, and go to state 68
    LSHIFT   shift, and go to state 69
    RSHIFT   shift, and go to state 70
    ADD      shift, and go to state 71
    SUB      shift, and go to state 72
    MUL      shift, and go to state 73
    DIV      shift, and go to state 74
    SUR      shift, and go to state 75
    INCR     shift, and go to state 76
    DECR     shift, and go to state 77
    RIGHTBR  shift, and go to state 150


State 143

   14 statement: WHILE LEFTBR expr . RIGHTBR LBRACE statements RBRACE
   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    LOP_ASS  shift, and go to state 47
    ADD_ASS  shift, and go to state 48
    SUB_ASS  shift, and go to state 49
    MUL_ASS  shift, and go to state 50
    DIV_ASS  shift, and go to state 51
    SUR_ASS  shift, and go to state 52
    LS_ASS   shift, and go to state 53
    RS_ASS   shift, and go to state 54
    AND_ASS  shift, and go to state 55
    OR_ASS   shift, and go to state 56
    XOR_ASS  shift, and go to state 57
    LOG_OR   shift, and go to state 58
    LOG_AND  shift, and go to state 59
    BIT_OR   shift, and go to state 60
    BIT_XOR  shift, and go to state 61
    BIT_AND  shift, and go to state 62
    EQ       shift, and go to state 63
    UEQ      shift, and go to state 64
    GT       shift, and go to state 65
    LT       shift, and go to state 66
    GE       shift, and go to state 67
    LE       shift, and go to state 68
    LSHIFT   shift, and go to state 69
    RSHIFT   shift, and go to state 70
    ADD      shift, and go to state 71
    SUB      shift, and go to state 72
    MUL      shift, and go to state 73
    DIV      shift, and go to state 74
    SUR      shift, and go to state 75
    INCR     shift, and go to state 76
    DECR     shift, and go to state 77
    RIGHTBR  shift, and go to state 151


State 144

    9 PARMS: PARMS . COMMA T IDENTIFIER
   22 for_decl: PARMS . COMMA T IDENTIFIER LOP_ASS expr

    COMMA  shift, and go to state 152


State 145

   16 statement: FOR LEFTBR for_decl . SEMICOLON expr SEMICOLON expr RIGHTBR LBRACE statements RBRACE

    SEMICOLON  shift, and go to state 153


State 146

   15 statement: FOR LEFTBR expr . SEMICOLON expr SEMICOLON expr RIGHTBR LBRACE statements RBRACE
   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    LOP_ASS    shift, and go to state 47
    ADD_ASS    shift, and go to state 48
    SUB_ASS    shift, and go to state 49
    MUL_ASS    shift, and go to state 50
    DIV_ASS    shift, and go to state 51
    SUR_ASS    shift, and go to state 52
    LS_ASS     shift, and go to state 53
    RS_ASS     shift, and go to state 54
    AND_ASS    shift, and go to state 55
    OR_ASS     shift, and go to state 56
    XOR_ASS    shift, and go to state 57
    LOG_OR     shift, and go to state 58
    LOG_AND    shift, and go to state 59
    BIT_OR     shift, and go to state 60
    BIT_XOR    shift, and go to state 61
    BIT_AND    shift, and go to state 62
    EQ         shift, and go to state 63
    UEQ        shift, and go to state 64
    GT         shift, and go to state 65
    LT         shift, and go to state 66
    GE         shift, and go to state 67
    LE         shift, and go to state 68
    LSHIFT     shift, and go to state 69
    RSHIFT     shift, and go to state 70
    ADD        shift, and go to state 71
    SUB        shift, and go to state 72
    MUL        shift, and go to state 73
    DIV        shift, and go to state 74
    SUR        shift, and go to state 75
    INCR       shift, and go to state 76
    DECR       shift, and go to state 77
    SEMICOLON  shift, and go to state 154


State 147

    8 PARMS: T . IDENTIFIER
   21 for_decl: T . IDENTIFIER LOP_ASS expr

    IDENTIFIER  shift, and go to state 155


State 148

   18 statement: RETURN expr SEMICOLON .

    $default  reduce using rule 18 (statement)


State 149

    6 function: T IDENTIFIER LEFTBR PARMS RIGHTBR LBRACE statements RBRACE .

    $default  reduce using rule 6 (function)


State 150

   17 statement: IF LEFTBR expr RIGHTBR . LBRACE statements RBRACE

    LBRACE  shift, and go to state 156


State 151

   14 statement: WHILE LEFTBR expr RIGHTBR . LBRACE statements RBRACE

    LBRACE  shift, and go to state 157


State 152

    9 PARMS: PARMS COMMA . T IDENTIFIER
   22 for_decl: PARMS COMMA . T IDENTIFIER LOP_ASS expr

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_BOOL    shift, and go to state 4
    T_VOID    shift, and go to state 5

    T  go to state 158


State 153

   16 statement: FOR LEFTBR for_decl SEMICOLON . expr SEMICOLON expr RIGHTBR LBRACE statements RBRACE

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 159


State 154

   15 statement: FOR LEFTBR expr SEMICOLON . expr SEMICOLON expr RIGHTBR LBRACE statements RBRACE

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 160


State 155

    8 PARMS: T IDENTIFIER .
   21 for_decl: T IDENTIFIER . LOP_ASS expr

    LOP_ASS  shift, and go to state 161

    $default  reduce using rule 8 (PARMS)


State 156

   17 statement: IF LEFTBR expr RIGHTBR LBRACE . statements RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    SEMICOLON   shift, and go to state 115
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    IF          shift, and go to state 116
    WHILE       shift, and go to state 117
    FOR         shift, and go to state 118
    RETURN      shift, and go to state 119

    statements   go to state 162
    statement    go to state 121
    declaration  go to state 122
    expr         go to state 123
    T            go to state 124


State 157

   14 statement: WHILE LEFTBR expr RIGHTBR LBRACE . statements RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    SEMICOLON   shift, and go to state 115
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    IF          shift, and go to state 116
    WHILE       shift, and go to state 117
    FOR         shift, and go to state 118
    RETURN      shift, and go to state 119

    statements   go to state 163
    statement    go to state 121
    declaration  go to state 122
    expr         go to state 123
    T            go to state 124


State 158

    9 PARMS: PARMS COMMA T . IDENTIFIER
   22 for_decl: PARMS COMMA T . IDENTIFIER LOP_ASS expr

    IDENTIFIER  shift, and go to state 164


State 159

   16 statement: FOR LEFTBR for_decl SEMICOLON expr . SEMICOLON expr RIGHTBR LBRACE statements RBRACE
   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    LOP_ASS    shift, and go to state 47
    ADD_ASS    shift, and go to state 48
    SUB_ASS    shift, and go to state 49
    MUL_ASS    shift, and go to state 50
    DIV_ASS    shift, and go to state 51
    SUR_ASS    shift, and go to state 52
    LS_ASS     shift, and go to state 53
    RS_ASS     shift, and go to state 54
    AND_ASS    shift, and go to state 55
    OR_ASS     shift, and go to state 56
    XOR_ASS    shift, and go to state 57
    LOG_OR     shift, and go to state 58
    LOG_AND    shift, and go to state 59
    BIT_OR     shift, and go to state 60
    BIT_XOR    shift, and go to state 61
    BIT_AND    shift, and go to state 62
    EQ         shift, and go to state 63
    UEQ        shift, and go to state 64
    GT         shift, and go to state 65
    LT         shift, and go to state 66
    GE         shift, and go to state 67
    LE         shift, and go to state 68
    LSHIFT     shift, and go to state 69
    RSHIFT     shift, and go to state 70
    ADD        shift, and go to state 71
    SUB        shift, and go to state 72
    MUL        shift, and go to state 73
    DIV        shift, and go to state 74
    SUR        shift, and go to state 75
    INCR       shift, and go to state 76
    DECR       shift, and go to state 77
    SEMICOLON  shift, and go to state 165


State 160

   15 statement: FOR LEFTBR expr SEMICOLON expr . SEMICOLON expr RIGHTBR LBRACE statements RBRACE
   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    LOP_ASS    shift, and go to state 47
    ADD_ASS    shift, and go to state 48
    SUB_ASS    shift, and go to state 49
    MUL_ASS    shift, and go to state 50
    DIV_ASS    shift, and go to state 51
    SUR_ASS    shift, and go to state 52
    LS_ASS     shift, and go to state 53
    RS_ASS     shift, and go to state 54
    AND_ASS    shift, and go to state 55
    OR_ASS     shift, and go to state 56
    XOR_ASS    shift, and go to state 57
    LOG_OR     shift, and go to state 58
    LOG_AND    shift, and go to state 59
    BIT_OR     shift, and go to state 60
    BIT_XOR    shift, and go to state 61
    BIT_AND    shift, and go to state 62
    EQ         shift, and go to state 63
    UEQ        shift, and go to state 64
    GT         shift, and go to state 65
    LT         shift, and go to state 66
    GE         shift, and go to state 67
    LE         shift, and go to state 68
    LSHIFT     shift, and go to state 69
    RSHIFT     shift, and go to state 70
    ADD        shift, and go to state 71
    SUB        shift, and go to state 72
    MUL        shift, and go to state 73
    DIV        shift, and go to state 74
    SUR        shift, and go to state 75
    INCR       shift, and go to state 76
    DECR       shift, and go to state 77
    SEMICOLON  shift, and go to state 166


State 161

   21 for_decl: T IDENTIFIER LOP_ASS . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 167


State 162

   11 statements: statements . statement
   17 statement: IF LEFTBR expr RIGHTBR LBRACE statements . RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    RBRACE      shift, and go to state 168
    SEMICOLON   shift, and go to state 115
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    IF          shift, and go to state 116
    WHILE       shift, and go to state 117
    FOR         shift, and go to state 118
    RETURN      shift, and go to state 119

    statement    go to state 135
    declaration  go to state 122
    expr         go to state 123
    T            go to state 124


State 163

   11 statements: statements . statement
   14 statement: WHILE LEFTBR expr RIGHTBR LBRACE statements . RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    RBRACE      shift, and go to state 169
    SEMICOLON   shift, and go to state 115
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    IF          shift, and go to state 116
    WHILE       shift, and go to state 117
    FOR         shift, and go to state 118
    RETURN      shift, and go to state 119

    statement    go to state 135
    declaration  go to state 122
    expr         go to state 123
    T            go to state 124


State 164

    9 PARMS: PARMS COMMA T IDENTIFIER .
   22 for_decl: PARMS COMMA T IDENTIFIER . LOP_ASS expr

    LOP_ASS  shift, and go to state 170

    $default  reduce using rule 9 (PARMS)


State 165

   16 statement: FOR LEFTBR for_decl SEMICOLON expr SEMICOLON . expr RIGHTBR LBRACE statements RBRACE

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 171


State 166

   15 statement: FOR LEFTBR expr SEMICOLON expr SEMICOLON . expr RIGHTBR LBRACE statements RBRACE

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 172


State 167

   21 for_decl: T IDENTIFIER LOP_ASS expr .
   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    LOP_ASS  shift, and go to state 47
    ADD_ASS  shift, and go to state 48
    SUB_ASS  shift, and go to state 49
    MUL_ASS  shift, and go to state 50
    DIV_ASS  shift, and go to state 51
    SUR_ASS  shift, and go to state 52
    LS_ASS   shift, and go to state 53
    RS_ASS   shift, and go to state 54
    AND_ASS  shift, and go to state 55
    OR_ASS   shift, and go to state 56
    XOR_ASS  shift, and go to state 57
    LOG_OR   shift, and go to state 58
    LOG_AND  shift, and go to state 59
    BIT_OR   shift, and go to state 60
    BIT_XOR  shift, and go to state 61
    BIT_AND  shift, and go to state 62
    EQ       shift, and go to state 63
    UEQ      shift, and go to state 64
    GT       shift, and go to state 65
    LT       shift, and go to state 66
    GE       shift, and go to state 67
    LE       shift, and go to state 68
    LSHIFT   shift, and go to state 69
    RSHIFT   shift, and go to state 70
    ADD      shift, and go to state 71
    SUB      shift, and go to state 72
    MUL      shift, and go to state 73
    DIV      shift, and go to state 74
    SUR      shift, and go to state 75
    INCR     shift, and go to state 76
    DECR     shift, and go to state 77

    $default  reduce using rule 21 (for_decl)


State 168

   17 statement: IF LEFTBR expr RIGHTBR LBRACE statements RBRACE .

    $default  reduce using rule 17 (statement)


State 169

   14 statement: WHILE LEFTBR expr RIGHTBR LBRACE statements RBRACE .

    $default  reduce using rule 14 (statement)


State 170

   22 for_decl: PARMS COMMA T IDENTIFIER LOP_ASS . expr

    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 173


State 171

   16 statement: FOR LEFTBR for_decl SEMICOLON expr SEMICOLON expr . RIGHTBR LBRACE statements RBRACE
   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    LOP_ASS  shift, and go to state 47
    ADD_ASS  shift, and go to state 48
    SUB_ASS  shift, and go to state 49
    MUL_ASS  shift, and go to state 50
    DIV_ASS  shift, and go to state 51
    SUR_ASS  shift, and go to state 52
    LS_ASS   shift, and go to state 53
    RS_ASS   shift, and go to state 54
    AND_ASS  shift, and go to state 55
    OR_ASS   shift, and go to state 56
    XOR_ASS  shift, and go to state 57
    LOG_OR   shift, and go to state 58
    LOG_AND  shift, and go to state 59
    BIT_OR   shift, and go to state 60
    BIT_XOR  shift, and go to state 61
    BIT_AND  shift, and go to state 62
    EQ       shift, and go to state 63
    UEQ      shift, and go to state 64
    GT       shift, and go to state 65
    LT       shift, and go to state 66
    GE       shift, and go to state 67
    LE       shift, and go to state 68
    LSHIFT   shift, and go to state 69
    RSHIFT   shift, and go to state 70
    ADD      shift, and go to state 71
    SUB      shift, and go to state 72
    MUL      shift, and go to state 73
    DIV      shift, and go to state 74
    SUR      shift, and go to state 75
    INCR     shift, and go to state 76
    DECR     shift, and go to state 77
    RIGHTBR  shift, and go to state 174


State 172

   15 statement: FOR LEFTBR expr SEMICOLON expr SEMICOLON expr . RIGHTBR LBRACE statements RBRACE
   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    LOP_ASS  shift, and go to state 47
    ADD_ASS  shift, and go to state 48
    SUB_ASS  shift, and go to state 49
    MUL_ASS  shift, and go to state 50
    DIV_ASS  shift, and go to state 51
    SUR_ASS  shift, and go to state 52
    LS_ASS   shift, and go to state 53
    RS_ASS   shift, and go to state 54
    AND_ASS  shift, and go to state 55
    OR_ASS   shift, and go to state 56
    XOR_ASS  shift, and go to state 57
    LOG_OR   shift, and go to state 58
    LOG_AND  shift, and go to state 59
    BIT_OR   shift, and go to state 60
    BIT_XOR  shift, and go to state 61
    BIT_AND  shift, and go to state 62
    EQ       shift, and go to state 63
    UEQ      shift, and go to state 64
    GT       shift, and go to state 65
    LT       shift, and go to state 66
    GE       shift, and go to state 67
    LE       shift, and go to state 68
    LSHIFT   shift, and go to state 69
    RSHIFT   shift, and go to state 70
    ADD      shift, and go to state 71
    SUB      shift, and go to state 72
    MUL      shift, and go to state 73
    DIV      shift, and go to state 74
    SUR      shift, and go to state 75
    INCR     shift, and go to state 76
    DECR     shift, and go to state 77
    RIGHTBR  shift, and go to state 175


State 173

   22 for_decl: PARMS COMMA T IDENTIFIER LOP_ASS expr .
   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MUL expr
   38     | expr . DIV expr
   39     | expr . SUR expr
   40     | expr . LSHIFT expr
   41     | expr . RSHIFT expr
   42     | expr . BIT_AND expr
   43     | expr . BIT_OR expr
   44     | expr . BIT_XOR expr
   45     | expr . EQ expr
   46     | expr . UEQ expr
   47     | expr . LT expr
   48     | expr . GT expr
   49     | expr . LE expr
   50     | expr . GE expr
   51     | expr . LOG_AND expr
   52     | expr . LOG_OR expr
   53     | expr . LOP_ASS expr
   54     | expr . ADD_ASS expr
   55     | expr . SUB_ASS expr
   56     | expr . MUL_ASS expr
   57     | expr . DIV_ASS expr
   58     | expr . SUR_ASS expr
   59     | expr . LS_ASS expr
   60     | expr . RS_ASS expr
   61     | expr . OR_ASS expr
   62     | expr . AND_ASS expr
   63     | expr . XOR_ASS expr
   71     | expr . INCR
   72     | expr . DECR

    LOP_ASS  shift, and go to state 47
    ADD_ASS  shift, and go to state 48
    SUB_ASS  shift, and go to state 49
    MUL_ASS  shift, and go to state 50
    DIV_ASS  shift, and go to state 51
    SUR_ASS  shift, and go to state 52
    LS_ASS   shift, and go to state 53
    RS_ASS   shift, and go to state 54
    AND_ASS  shift, and go to state 55
    OR_ASS   shift, and go to state 56
    XOR_ASS  shift, and go to state 57
    LOG_OR   shift, and go to state 58
    LOG_AND  shift, and go to state 59
    BIT_OR   shift, and go to state 60
    BIT_XOR  shift, and go to state 61
    BIT_AND  shift, and go to state 62
    EQ       shift, and go to state 63
    UEQ      shift, and go to state 64
    GT       shift, and go to state 65
    LT       shift, and go to state 66
    GE       shift, and go to state 67
    LE       shift, and go to state 68
    LSHIFT   shift, and go to state 69
    RSHIFT   shift, and go to state 70
    ADD      shift, and go to state 71
    SUB      shift, and go to state 72
    MUL      shift, and go to state 73
    DIV      shift, and go to state 74
    SUR      shift, and go to state 75
    INCR     shift, and go to state 76
    DECR     shift, and go to state 77

    $default  reduce using rule 22 (for_decl)


State 174

   16 statement: FOR LEFTBR for_decl SEMICOLON expr SEMICOLON expr RIGHTBR . LBRACE statements RBRACE

    LBRACE  shift, and go to state 176


State 175

   15 statement: FOR LEFTBR expr SEMICOLON expr SEMICOLON expr RIGHTBR . LBRACE statements RBRACE

    LBRACE  shift, and go to state 177


State 176

   16 statement: FOR LEFTBR for_decl SEMICOLON expr SEMICOLON expr RIGHTBR LBRACE . statements RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    SEMICOLON   shift, and go to state 115
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    IF          shift, and go to state 116
    WHILE       shift, and go to state 117
    FOR         shift, and go to state 118
    RETURN      shift, and go to state 119

    statements   go to state 178
    statement    go to state 121
    declaration  go to state 122
    expr         go to state 123
    T            go to state 124


State 177

   15 statement: FOR LEFTBR expr SEMICOLON expr SEMICOLON expr RIGHTBR LBRACE . statements RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    SEMICOLON   shift, and go to state 115
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    IF          shift, and go to state 116
    WHILE       shift, and go to state 117
    FOR         shift, and go to state 118
    RETURN      shift, and go to state 119

    statements   go to state 179
    statement    go to state 121
    declaration  go to state 122
    expr         go to state 123
    T            go to state 124


State 178

   11 statements: statements . statement
   16 statement: FOR LEFTBR for_decl SEMICOLON expr SEMICOLON expr RIGHTBR LBRACE statements . RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    RBRACE      shift, and go to state 180
    SEMICOLON   shift, and go to state 115
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    IF          shift, and go to state 116
    WHILE       shift, and go to state 117
    FOR         shift, and go to state 118
    RETURN      shift, and go to state 119

    statement    go to state 135
    declaration  go to state 122
    expr         go to state 123
    T            go to state 124


State 179

   11 statements: statements . statement
   15 statement: FOR LEFTBR expr SEMICOLON expr SEMICOLON expr RIGHTBR LBRACE statements . RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    BIT_AND     shift, and go to state 21
    ADD         shift, and go to state 22
    SUB         shift, and go to state 23
    BIT_NOT     shift, and go to state 24
    LOG_NOT     shift, and go to state 25
    INCR        shift, and go to state 26
    DECR        shift, and go to state 27
    LEFTBR      shift, and go to state 28
    RBRACE      shift, and go to state 181
    SEMICOLON   shift, and go to state 115
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    IF          shift, and go to state 116
    WHILE       shift, and go to state 117
    FOR         shift, and go to state 118
    RETURN      shift, and go to state 119

    statement    go to state 135
    declaration  go to state 122
    expr         go to state 123
    T            go to state 124


State 180

   16 statement: FOR LEFTBR for_decl SEMICOLON expr SEMICOLON expr RIGHTBR LBRACE statements RBRACE .

    $default  reduce using rule 16 (statement)


State 181

   15 statement: FOR LEFTBR expr SEMICOLON expr SEMICOLON expr RIGHTBR LBRACE statements RBRACE .

    $default  reduce using rule 15 (statement)
