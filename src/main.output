Terminals unused in grammar

    BOOL


Grammar

    0 $accept: program $end

    1 program: units

    2 units: declaration SEMICOLON
    3      | function
    4      | units declaration SEMICOLON
    5      | units function

    6 function: T IDENTIFIER LEFTBR PARMS RIGHTBR LBRACE statements RBRACE
    7         | T IDENTIFIER LEFTBR RIGHTBR LBRACE statements RBRACE
    8         | T_VOID IDENTIFIER LEFTBR PARMS RIGHTBR LBRACE statements RBRACE
    9         | T_VOID IDENTIFIER LEFTBR RIGHTBR LBRACE statements RBRACE

   10 PARMS: T IDENTIFIER
   11      | PARMS COMMA T IDENTIFIER

   12 statements: statement
   13           | statements statement

   14 statement: SEMICOLON
   15          | declaration SEMICOLON
   16          | WHILE LEFTBR expr RIGHTBR LBRACE statements RBRACE
   17          | FOR LEFTBR expr SEMICOLON expr SEMICOLON expr RIGHTBR LBRACE statements RBRACE
   18          | IF LEFTBR expr RIGHTBR LBRACE statements RBRACE
   19          | RETURN expr SEMICOLON
   20          | expr SEMICOLON

   21 declaration: T IDENTIFIER LOP_ASS expr
   22            | T IDENTIFIERS

   23 IDENTIFIERS: IDENTIFIER
   24            | IDENTIFIERS COMMA IDENTIFIER

   25 expr: IDENTIFIER
   26     | INTEGER
   27     | CHAR
   28     | STRING
   29     | expr ADD expr
   30     | expr SUB expr
   31     | expr MUL expr
   32     | expr DIV expr
   33     | expr SUR expr
   34     | expr LSHIFT expr
   35     | expr RSHIFT expr
   36     | expr BIT_AND expr
   37     | expr BIT_OR expr
   38     | expr BIT_XOR expr
   39     | expr EQ expr
   40     | expr UEQ expr
   41     | expr LT expr
   42     | expr GT expr
   43     | expr LE expr
   44     | expr GE expr
   45     | expr LOG_AND expr
   46     | expr LOG_OR expr
   47     | expr LOP_ASS expr
   48     | expr ADD_ASS expr
   49     | expr SUB_ASS expr
   50     | expr MUL_ASS expr
   51     | expr DIV_ASS expr
   52     | expr SUR_ASS expr
   53     | expr LS_ASS expr
   54     | expr RS_ASS expr
   55     | expr OR_ASS expr
   56     | expr AND_ASS expr
   57     | expr XOR_ASS expr
   58     | SUB expr
   59     | ADD expr
   60     | LEFTBR expr RIGHTBR

   61 T: T_INT
   62  | T_CHAR
   63  | T_BOOL
   64  | T_STRING


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_CHAR (258) 62
    T_INT (259) 61
    T_STRING (260) 64
    T_BOOL (261) 63
    T_VOID (262) 8 9
    LOP_ASS (263) 21 47
    ADD_ASS (264) 48
    SUB_ASS (265) 49
    MUL_ASS (266) 50
    DIV_ASS (267) 51
    SUR_ASS (268) 52
    LS_ASS (269) 53
    RS_ASS (270) 54
    AND_ASS (271) 56
    OR_ASS (272) 55
    XOR_ASS (273) 57
    LOG_OR (274) 46
    LOG_AND (275) 45
    BIT_OR (276) 37
    BIT_XOR (277) 38
    BIT_AND (278) 36
    EQ (279) 39
    UEQ (280) 40
    GT (281) 42
    LT (282) 41
    GE (283) 44
    LE (284) 43
    LSHIFT (285) 34
    RSHIFT (286) 35
    ADD (287) 29 59
    SUB (288) 30 58
    MUL (289) 31
    DIV (290) 32
    SUR (291) 33
    LEFTBR (292) 6 7 8 9 16 17 18 60
    RIGHTBR (293) 6 7 8 9 16 17 18 60
    LBRACE (294) 6 7 8 9 16 17 18
    RBRACE (295) 6 7 8 9 16 17 18
    SEMICOLON (296) 2 4 14 15 17 19 20
    COMMA (297) 11 24
    IDENTIFIER (298) 6 7 8 9 10 11 21 23 24 25
    INTEGER (299) 26
    CHAR (300) 27
    BOOL (301)
    STRING (302) 28
    IF (303) 18
    WHILE (304) 16
    FOR (305) 17
    RETURN (306) 19
    UMINUS (307)
    UADD (308)


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    program (55)
        on left: 1
        on right: 0
    units (56)
        on left: 2 3 4 5
        on right: 1 4 5
    function (57)
        on left: 6 7 8 9
        on right: 3 5
    PARMS (58)
        on left: 10 11
        on right: 6 8 11
    statements (59)
        on left: 12 13
        on right: 6 7 8 9 13 16 17 18
    statement (60)
        on left: 14 15 16 17 18 19 20
        on right: 12 13
    declaration (61)
        on left: 21 22
        on right: 2 4 15
    IDENTIFIERS (62)
        on left: 23 24
        on right: 22 24
    expr (63)
        on left: 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
        on right: 16 17 18 19 20 21 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
    T (64)
        on left: 61 62 63 64
        on right: 6 7 10 11 21 22


State 0

    0 $accept: . program $end

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_BOOL    shift, and go to state 4
    T_VOID    shift, and go to state 5

    program      go to state 6
    units        go to state 7
    function     go to state 8
    declaration  go to state 9
    T            go to state 10


State 1

   62 T: T_CHAR .

    $default  reduce using rule 62 (T)


State 2

   61 T: T_INT .

    $default  reduce using rule 61 (T)


State 3

   64 T: T_STRING .

    $default  reduce using rule 64 (T)


State 4

   63 T: T_BOOL .

    $default  reduce using rule 63 (T)


State 5

    8 function: T_VOID . IDENTIFIER LEFTBR PARMS RIGHTBR LBRACE statements RBRACE
    9         | T_VOID . IDENTIFIER LEFTBR RIGHTBR LBRACE statements RBRACE

    IDENTIFIER  shift, and go to state 11


State 6

    0 $accept: program . $end

    $end  shift, and go to state 12


State 7

    1 program: units .
    4 units: units . declaration SEMICOLON
    5      | units . function

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_BOOL    shift, and go to state 4
    T_VOID    shift, and go to state 5

    $default  reduce using rule 1 (program)

    function     go to state 13
    declaration  go to state 14
    T            go to state 10


State 8

    3 units: function .

    $default  reduce using rule 3 (units)


State 9

    2 units: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 15


State 10

    6 function: T . IDENTIFIER LEFTBR PARMS RIGHTBR LBRACE statements RBRACE
    7         | T . IDENTIFIER LEFTBR RIGHTBR LBRACE statements RBRACE
   21 declaration: T . IDENTIFIER LOP_ASS expr
   22            | T . IDENTIFIERS

    IDENTIFIER  shift, and go to state 16

    IDENTIFIERS  go to state 17


State 11

    8 function: T_VOID IDENTIFIER . LEFTBR PARMS RIGHTBR LBRACE statements RBRACE
    9         | T_VOID IDENTIFIER . LEFTBR RIGHTBR LBRACE statements RBRACE

    LEFTBR  shift, and go to state 18


State 12

    0 $accept: program $end .

    $default  accept


State 13

    5 units: units function .

    $default  reduce using rule 5 (units)


State 14

    4 units: units declaration . SEMICOLON

    SEMICOLON  shift, and go to state 19


State 15

    2 units: declaration SEMICOLON .

    $default  reduce using rule 2 (units)


State 16

    6 function: T IDENTIFIER . LEFTBR PARMS RIGHTBR LBRACE statements RBRACE
    7         | T IDENTIFIER . LEFTBR RIGHTBR LBRACE statements RBRACE
   21 declaration: T IDENTIFIER . LOP_ASS expr
   23 IDENTIFIERS: IDENTIFIER .

    LOP_ASS  shift, and go to state 20
    LEFTBR   shift, and go to state 21

    $default  reduce using rule 23 (IDENTIFIERS)


State 17

   22 declaration: T IDENTIFIERS .
   24 IDENTIFIERS: IDENTIFIERS . COMMA IDENTIFIER

    COMMA  shift, and go to state 22

    $default  reduce using rule 22 (declaration)


State 18

    8 function: T_VOID IDENTIFIER LEFTBR . PARMS RIGHTBR LBRACE statements RBRACE
    9         | T_VOID IDENTIFIER LEFTBR . RIGHTBR LBRACE statements RBRACE

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_BOOL    shift, and go to state 4
    RIGHTBR   shift, and go to state 23

    PARMS  go to state 24
    T      go to state 25


State 19

    4 units: units declaration SEMICOLON .

    $default  reduce using rule 4 (units)


State 20

   21 declaration: T IDENTIFIER LOP_ASS . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 33


State 21

    6 function: T IDENTIFIER LEFTBR . PARMS RIGHTBR LBRACE statements RBRACE
    7         | T IDENTIFIER LEFTBR . RIGHTBR LBRACE statements RBRACE

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_BOOL    shift, and go to state 4
    RIGHTBR   shift, and go to state 34

    PARMS  go to state 35
    T      go to state 25


State 22

   24 IDENTIFIERS: IDENTIFIERS COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 36


State 23

    9 function: T_VOID IDENTIFIER LEFTBR RIGHTBR . LBRACE statements RBRACE

    LBRACE  shift, and go to state 37


State 24

    8 function: T_VOID IDENTIFIER LEFTBR PARMS . RIGHTBR LBRACE statements RBRACE
   11 PARMS: PARMS . COMMA T IDENTIFIER

    RIGHTBR  shift, and go to state 38
    COMMA    shift, and go to state 39


State 25

   10 PARMS: T . IDENTIFIER

    IDENTIFIER  shift, and go to state 40


State 26

   59 expr: ADD . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 41


State 27

   58 expr: SUB . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 42


State 28

   60 expr: LEFTBR . expr RIGHTBR

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 43


State 29

   25 expr: IDENTIFIER .

    $default  reduce using rule 25 (expr)


State 30

   26 expr: INTEGER .

    $default  reduce using rule 26 (expr)


State 31

   27 expr: CHAR .

    $default  reduce using rule 27 (expr)


State 32

   28 expr: STRING .

    $default  reduce using rule 28 (expr)


State 33

   21 declaration: T IDENTIFIER LOP_ASS expr .
   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    LOP_ASS  shift, and go to state 44
    ADD_ASS  shift, and go to state 45
    SUB_ASS  shift, and go to state 46
    MUL_ASS  shift, and go to state 47
    DIV_ASS  shift, and go to state 48
    SUR_ASS  shift, and go to state 49
    LS_ASS   shift, and go to state 50
    RS_ASS   shift, and go to state 51
    AND_ASS  shift, and go to state 52
    OR_ASS   shift, and go to state 53
    XOR_ASS  shift, and go to state 54
    LOG_OR   shift, and go to state 55
    LOG_AND  shift, and go to state 56
    BIT_OR   shift, and go to state 57
    BIT_XOR  shift, and go to state 58
    BIT_AND  shift, and go to state 59
    EQ       shift, and go to state 60
    UEQ      shift, and go to state 61
    GT       shift, and go to state 62
    LT       shift, and go to state 63
    GE       shift, and go to state 64
    LE       shift, and go to state 65
    LSHIFT   shift, and go to state 66
    RSHIFT   shift, and go to state 67
    ADD      shift, and go to state 68
    SUB      shift, and go to state 69
    MUL      shift, and go to state 70
    DIV      shift, and go to state 71
    SUR      shift, and go to state 72

    $default  reduce using rule 21 (declaration)


State 34

    7 function: T IDENTIFIER LEFTBR RIGHTBR . LBRACE statements RBRACE

    LBRACE  shift, and go to state 73


State 35

    6 function: T IDENTIFIER LEFTBR PARMS . RIGHTBR LBRACE statements RBRACE
   11 PARMS: PARMS . COMMA T IDENTIFIER

    RIGHTBR  shift, and go to state 74
    COMMA    shift, and go to state 39


State 36

   24 IDENTIFIERS: IDENTIFIERS COMMA IDENTIFIER .

    $default  reduce using rule 24 (IDENTIFIERS)


State 37

    9 function: T_VOID IDENTIFIER LEFTBR RIGHTBR LBRACE . statements RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    SEMICOLON   shift, and go to state 75
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    IF          shift, and go to state 76
    WHILE       shift, and go to state 77
    FOR         shift, and go to state 78
    RETURN      shift, and go to state 79

    statements   go to state 80
    statement    go to state 81
    declaration  go to state 82
    expr         go to state 83
    T            go to state 84


State 38

    8 function: T_VOID IDENTIFIER LEFTBR PARMS RIGHTBR . LBRACE statements RBRACE

    LBRACE  shift, and go to state 85


State 39

   11 PARMS: PARMS COMMA . T IDENTIFIER

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_BOOL    shift, and go to state 4

    T  go to state 86


State 40

   10 PARMS: T IDENTIFIER .

    $default  reduce using rule 10 (PARMS)


State 41

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr
   59     | ADD expr .

    $default  reduce using rule 59 (expr)


State 42

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr
   58     | SUB expr .

    $default  reduce using rule 58 (expr)


State 43

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr
   60     | LEFTBR expr . RIGHTBR

    LOP_ASS  shift, and go to state 44
    ADD_ASS  shift, and go to state 45
    SUB_ASS  shift, and go to state 46
    MUL_ASS  shift, and go to state 47
    DIV_ASS  shift, and go to state 48
    SUR_ASS  shift, and go to state 49
    LS_ASS   shift, and go to state 50
    RS_ASS   shift, and go to state 51
    AND_ASS  shift, and go to state 52
    OR_ASS   shift, and go to state 53
    XOR_ASS  shift, and go to state 54
    LOG_OR   shift, and go to state 55
    LOG_AND  shift, and go to state 56
    BIT_OR   shift, and go to state 57
    BIT_XOR  shift, and go to state 58
    BIT_AND  shift, and go to state 59
    EQ       shift, and go to state 60
    UEQ      shift, and go to state 61
    GT       shift, and go to state 62
    LT       shift, and go to state 63
    GE       shift, and go to state 64
    LE       shift, and go to state 65
    LSHIFT   shift, and go to state 66
    RSHIFT   shift, and go to state 67
    ADD      shift, and go to state 68
    SUB      shift, and go to state 69
    MUL      shift, and go to state 70
    DIV      shift, and go to state 71
    SUR      shift, and go to state 72
    RIGHTBR  shift, and go to state 87


State 44

   47 expr: expr LOP_ASS . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 88


State 45

   48 expr: expr ADD_ASS . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 89


State 46

   49 expr: expr SUB_ASS . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 90


State 47

   50 expr: expr MUL_ASS . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 91


State 48

   51 expr: expr DIV_ASS . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 92


State 49

   52 expr: expr SUR_ASS . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 93


State 50

   53 expr: expr LS_ASS . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 94


State 51

   54 expr: expr RS_ASS . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 95


State 52

   56 expr: expr AND_ASS . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 96


State 53

   55 expr: expr OR_ASS . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 97


State 54

   57 expr: expr XOR_ASS . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 98


State 55

   46 expr: expr LOG_OR . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 99


State 56

   45 expr: expr LOG_AND . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 100


State 57

   37 expr: expr BIT_OR . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 101


State 58

   38 expr: expr BIT_XOR . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 102


State 59

   36 expr: expr BIT_AND . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 103


State 60

   39 expr: expr EQ . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 104


State 61

   40 expr: expr UEQ . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 105


State 62

   42 expr: expr GT . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 106


State 63

   41 expr: expr LT . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 107


State 64

   44 expr: expr GE . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 108


State 65

   43 expr: expr LE . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 109


State 66

   34 expr: expr LSHIFT . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 110


State 67

   35 expr: expr RSHIFT . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 111


State 68

   29 expr: expr ADD . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 112


State 69

   30 expr: expr SUB . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 113


State 70

   31 expr: expr MUL . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 114


State 71

   32 expr: expr DIV . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 115


State 72

   33 expr: expr SUR . expr

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 116


State 73

    7 function: T IDENTIFIER LEFTBR RIGHTBR LBRACE . statements RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    SEMICOLON   shift, and go to state 75
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    IF          shift, and go to state 76
    WHILE       shift, and go to state 77
    FOR         shift, and go to state 78
    RETURN      shift, and go to state 79

    statements   go to state 117
    statement    go to state 81
    declaration  go to state 82
    expr         go to state 83
    T            go to state 84


State 74

    6 function: T IDENTIFIER LEFTBR PARMS RIGHTBR . LBRACE statements RBRACE

    LBRACE  shift, and go to state 118


State 75

   14 statement: SEMICOLON .

    $default  reduce using rule 14 (statement)


State 76

   18 statement: IF . LEFTBR expr RIGHTBR LBRACE statements RBRACE

    LEFTBR  shift, and go to state 119


State 77

   16 statement: WHILE . LEFTBR expr RIGHTBR LBRACE statements RBRACE

    LEFTBR  shift, and go to state 120


State 78

   17 statement: FOR . LEFTBR expr SEMICOLON expr SEMICOLON expr RIGHTBR LBRACE statements RBRACE

    LEFTBR  shift, and go to state 121


State 79

   19 statement: RETURN . expr SEMICOLON

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 122


State 80

    9 function: T_VOID IDENTIFIER LEFTBR RIGHTBR LBRACE statements . RBRACE
   13 statements: statements . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    RBRACE      shift, and go to state 123
    SEMICOLON   shift, and go to state 75
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    IF          shift, and go to state 76
    WHILE       shift, and go to state 77
    FOR         shift, and go to state 78
    RETURN      shift, and go to state 79

    statement    go to state 124
    declaration  go to state 82
    expr         go to state 83
    T            go to state 84


State 81

   12 statements: statement .

    $default  reduce using rule 12 (statements)


State 82

   15 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 125


State 83

   20 statement: expr . SEMICOLON
   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    LOP_ASS    shift, and go to state 44
    ADD_ASS    shift, and go to state 45
    SUB_ASS    shift, and go to state 46
    MUL_ASS    shift, and go to state 47
    DIV_ASS    shift, and go to state 48
    SUR_ASS    shift, and go to state 49
    LS_ASS     shift, and go to state 50
    RS_ASS     shift, and go to state 51
    AND_ASS    shift, and go to state 52
    OR_ASS     shift, and go to state 53
    XOR_ASS    shift, and go to state 54
    LOG_OR     shift, and go to state 55
    LOG_AND    shift, and go to state 56
    BIT_OR     shift, and go to state 57
    BIT_XOR    shift, and go to state 58
    BIT_AND    shift, and go to state 59
    EQ         shift, and go to state 60
    UEQ        shift, and go to state 61
    GT         shift, and go to state 62
    LT         shift, and go to state 63
    GE         shift, and go to state 64
    LE         shift, and go to state 65
    LSHIFT     shift, and go to state 66
    RSHIFT     shift, and go to state 67
    ADD        shift, and go to state 68
    SUB        shift, and go to state 69
    MUL        shift, and go to state 70
    DIV        shift, and go to state 71
    SUR        shift, and go to state 72
    SEMICOLON  shift, and go to state 126


State 84

   21 declaration: T . IDENTIFIER LOP_ASS expr
   22            | T . IDENTIFIERS

    IDENTIFIER  shift, and go to state 127

    IDENTIFIERS  go to state 17


State 85

    8 function: T_VOID IDENTIFIER LEFTBR PARMS RIGHTBR LBRACE . statements RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    SEMICOLON   shift, and go to state 75
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    IF          shift, and go to state 76
    WHILE       shift, and go to state 77
    FOR         shift, and go to state 78
    RETURN      shift, and go to state 79

    statements   go to state 128
    statement    go to state 81
    declaration  go to state 82
    expr         go to state 83
    T            go to state 84


State 86

   11 PARMS: PARMS COMMA T . IDENTIFIER

    IDENTIFIER  shift, and go to state 129


State 87

   60 expr: LEFTBR expr RIGHTBR .

    $default  reduce using rule 60 (expr)


State 88

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   47     | expr LOP_ASS expr .
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    LOP_ASS  shift, and go to state 44
    ADD_ASS  shift, and go to state 45
    SUB_ASS  shift, and go to state 46
    MUL_ASS  shift, and go to state 47
    DIV_ASS  shift, and go to state 48
    SUR_ASS  shift, and go to state 49
    LS_ASS   shift, and go to state 50
    RS_ASS   shift, and go to state 51
    AND_ASS  shift, and go to state 52
    OR_ASS   shift, and go to state 53
    XOR_ASS  shift, and go to state 54
    LOG_OR   shift, and go to state 55
    LOG_AND  shift, and go to state 56
    BIT_OR   shift, and go to state 57
    BIT_XOR  shift, and go to state 58
    BIT_AND  shift, and go to state 59
    EQ       shift, and go to state 60
    UEQ      shift, and go to state 61
    GT       shift, and go to state 62
    LT       shift, and go to state 63
    GE       shift, and go to state 64
    LE       shift, and go to state 65
    LSHIFT   shift, and go to state 66
    RSHIFT   shift, and go to state 67
    ADD      shift, and go to state 68
    SUB      shift, and go to state 69
    MUL      shift, and go to state 70
    DIV      shift, and go to state 71
    SUR      shift, and go to state 72

    $default  reduce using rule 47 (expr)


State 89

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   48     | expr ADD_ASS expr .
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    LOP_ASS  shift, and go to state 44
    ADD_ASS  shift, and go to state 45
    SUB_ASS  shift, and go to state 46
    MUL_ASS  shift, and go to state 47
    DIV_ASS  shift, and go to state 48
    SUR_ASS  shift, and go to state 49
    LS_ASS   shift, and go to state 50
    RS_ASS   shift, and go to state 51
    AND_ASS  shift, and go to state 52
    OR_ASS   shift, and go to state 53
    XOR_ASS  shift, and go to state 54
    LOG_OR   shift, and go to state 55
    LOG_AND  shift, and go to state 56
    BIT_OR   shift, and go to state 57
    BIT_XOR  shift, and go to state 58
    BIT_AND  shift, and go to state 59
    EQ       shift, and go to state 60
    UEQ      shift, and go to state 61
    GT       shift, and go to state 62
    LT       shift, and go to state 63
    GE       shift, and go to state 64
    LE       shift, and go to state 65
    LSHIFT   shift, and go to state 66
    RSHIFT   shift, and go to state 67
    ADD      shift, and go to state 68
    SUB      shift, and go to state 69
    MUL      shift, and go to state 70
    DIV      shift, and go to state 71
    SUR      shift, and go to state 72

    $default  reduce using rule 48 (expr)


State 90

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   49     | expr SUB_ASS expr .
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    LOP_ASS  shift, and go to state 44
    ADD_ASS  shift, and go to state 45
    SUB_ASS  shift, and go to state 46
    MUL_ASS  shift, and go to state 47
    DIV_ASS  shift, and go to state 48
    SUR_ASS  shift, and go to state 49
    LS_ASS   shift, and go to state 50
    RS_ASS   shift, and go to state 51
    AND_ASS  shift, and go to state 52
    OR_ASS   shift, and go to state 53
    XOR_ASS  shift, and go to state 54
    LOG_OR   shift, and go to state 55
    LOG_AND  shift, and go to state 56
    BIT_OR   shift, and go to state 57
    BIT_XOR  shift, and go to state 58
    BIT_AND  shift, and go to state 59
    EQ       shift, and go to state 60
    UEQ      shift, and go to state 61
    GT       shift, and go to state 62
    LT       shift, and go to state 63
    GE       shift, and go to state 64
    LE       shift, and go to state 65
    LSHIFT   shift, and go to state 66
    RSHIFT   shift, and go to state 67
    ADD      shift, and go to state 68
    SUB      shift, and go to state 69
    MUL      shift, and go to state 70
    DIV      shift, and go to state 71
    SUR      shift, and go to state 72

    $default  reduce using rule 49 (expr)


State 91

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   50     | expr MUL_ASS expr .
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    LOP_ASS  shift, and go to state 44
    ADD_ASS  shift, and go to state 45
    SUB_ASS  shift, and go to state 46
    MUL_ASS  shift, and go to state 47
    DIV_ASS  shift, and go to state 48
    SUR_ASS  shift, and go to state 49
    LS_ASS   shift, and go to state 50
    RS_ASS   shift, and go to state 51
    AND_ASS  shift, and go to state 52
    OR_ASS   shift, and go to state 53
    XOR_ASS  shift, and go to state 54
    LOG_OR   shift, and go to state 55
    LOG_AND  shift, and go to state 56
    BIT_OR   shift, and go to state 57
    BIT_XOR  shift, and go to state 58
    BIT_AND  shift, and go to state 59
    EQ       shift, and go to state 60
    UEQ      shift, and go to state 61
    GT       shift, and go to state 62
    LT       shift, and go to state 63
    GE       shift, and go to state 64
    LE       shift, and go to state 65
    LSHIFT   shift, and go to state 66
    RSHIFT   shift, and go to state 67
    ADD      shift, and go to state 68
    SUB      shift, and go to state 69
    MUL      shift, and go to state 70
    DIV      shift, and go to state 71
    SUR      shift, and go to state 72

    $default  reduce using rule 50 (expr)


State 92

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   51     | expr DIV_ASS expr .
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    LOP_ASS  shift, and go to state 44
    ADD_ASS  shift, and go to state 45
    SUB_ASS  shift, and go to state 46
    MUL_ASS  shift, and go to state 47
    DIV_ASS  shift, and go to state 48
    SUR_ASS  shift, and go to state 49
    LS_ASS   shift, and go to state 50
    RS_ASS   shift, and go to state 51
    AND_ASS  shift, and go to state 52
    OR_ASS   shift, and go to state 53
    XOR_ASS  shift, and go to state 54
    LOG_OR   shift, and go to state 55
    LOG_AND  shift, and go to state 56
    BIT_OR   shift, and go to state 57
    BIT_XOR  shift, and go to state 58
    BIT_AND  shift, and go to state 59
    EQ       shift, and go to state 60
    UEQ      shift, and go to state 61
    GT       shift, and go to state 62
    LT       shift, and go to state 63
    GE       shift, and go to state 64
    LE       shift, and go to state 65
    LSHIFT   shift, and go to state 66
    RSHIFT   shift, and go to state 67
    ADD      shift, and go to state 68
    SUB      shift, and go to state 69
    MUL      shift, and go to state 70
    DIV      shift, and go to state 71
    SUR      shift, and go to state 72

    $default  reduce using rule 51 (expr)


State 93

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   52     | expr SUR_ASS expr .
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    LOP_ASS  shift, and go to state 44
    ADD_ASS  shift, and go to state 45
    SUB_ASS  shift, and go to state 46
    MUL_ASS  shift, and go to state 47
    DIV_ASS  shift, and go to state 48
    SUR_ASS  shift, and go to state 49
    LS_ASS   shift, and go to state 50
    RS_ASS   shift, and go to state 51
    AND_ASS  shift, and go to state 52
    OR_ASS   shift, and go to state 53
    XOR_ASS  shift, and go to state 54
    LOG_OR   shift, and go to state 55
    LOG_AND  shift, and go to state 56
    BIT_OR   shift, and go to state 57
    BIT_XOR  shift, and go to state 58
    BIT_AND  shift, and go to state 59
    EQ       shift, and go to state 60
    UEQ      shift, and go to state 61
    GT       shift, and go to state 62
    LT       shift, and go to state 63
    GE       shift, and go to state 64
    LE       shift, and go to state 65
    LSHIFT   shift, and go to state 66
    RSHIFT   shift, and go to state 67
    ADD      shift, and go to state 68
    SUB      shift, and go to state 69
    MUL      shift, and go to state 70
    DIV      shift, and go to state 71
    SUR      shift, and go to state 72

    $default  reduce using rule 52 (expr)


State 94

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   53     | expr LS_ASS expr .
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    LOP_ASS  shift, and go to state 44
    ADD_ASS  shift, and go to state 45
    SUB_ASS  shift, and go to state 46
    MUL_ASS  shift, and go to state 47
    DIV_ASS  shift, and go to state 48
    SUR_ASS  shift, and go to state 49
    LS_ASS   shift, and go to state 50
    RS_ASS   shift, and go to state 51
    AND_ASS  shift, and go to state 52
    OR_ASS   shift, and go to state 53
    XOR_ASS  shift, and go to state 54
    LOG_OR   shift, and go to state 55
    LOG_AND  shift, and go to state 56
    BIT_OR   shift, and go to state 57
    BIT_XOR  shift, and go to state 58
    BIT_AND  shift, and go to state 59
    EQ       shift, and go to state 60
    UEQ      shift, and go to state 61
    GT       shift, and go to state 62
    LT       shift, and go to state 63
    GE       shift, and go to state 64
    LE       shift, and go to state 65
    LSHIFT   shift, and go to state 66
    RSHIFT   shift, and go to state 67
    ADD      shift, and go to state 68
    SUB      shift, and go to state 69
    MUL      shift, and go to state 70
    DIV      shift, and go to state 71
    SUR      shift, and go to state 72

    $default  reduce using rule 53 (expr)


State 95

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   54     | expr RS_ASS expr .
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    LOP_ASS  shift, and go to state 44
    ADD_ASS  shift, and go to state 45
    SUB_ASS  shift, and go to state 46
    MUL_ASS  shift, and go to state 47
    DIV_ASS  shift, and go to state 48
    SUR_ASS  shift, and go to state 49
    LS_ASS   shift, and go to state 50
    RS_ASS   shift, and go to state 51
    AND_ASS  shift, and go to state 52
    OR_ASS   shift, and go to state 53
    XOR_ASS  shift, and go to state 54
    LOG_OR   shift, and go to state 55
    LOG_AND  shift, and go to state 56
    BIT_OR   shift, and go to state 57
    BIT_XOR  shift, and go to state 58
    BIT_AND  shift, and go to state 59
    EQ       shift, and go to state 60
    UEQ      shift, and go to state 61
    GT       shift, and go to state 62
    LT       shift, and go to state 63
    GE       shift, and go to state 64
    LE       shift, and go to state 65
    LSHIFT   shift, and go to state 66
    RSHIFT   shift, and go to state 67
    ADD      shift, and go to state 68
    SUB      shift, and go to state 69
    MUL      shift, and go to state 70
    DIV      shift, and go to state 71
    SUR      shift, and go to state 72

    $default  reduce using rule 54 (expr)


State 96

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   56     | expr AND_ASS expr .
   57     | expr . XOR_ASS expr

    LOP_ASS  shift, and go to state 44
    ADD_ASS  shift, and go to state 45
    SUB_ASS  shift, and go to state 46
    MUL_ASS  shift, and go to state 47
    DIV_ASS  shift, and go to state 48
    SUR_ASS  shift, and go to state 49
    LS_ASS   shift, and go to state 50
    RS_ASS   shift, and go to state 51
    AND_ASS  shift, and go to state 52
    OR_ASS   shift, and go to state 53
    XOR_ASS  shift, and go to state 54
    LOG_OR   shift, and go to state 55
    LOG_AND  shift, and go to state 56
    BIT_OR   shift, and go to state 57
    BIT_XOR  shift, and go to state 58
    BIT_AND  shift, and go to state 59
    EQ       shift, and go to state 60
    UEQ      shift, and go to state 61
    GT       shift, and go to state 62
    LT       shift, and go to state 63
    GE       shift, and go to state 64
    LE       shift, and go to state 65
    LSHIFT   shift, and go to state 66
    RSHIFT   shift, and go to state 67
    ADD      shift, and go to state 68
    SUB      shift, and go to state 69
    MUL      shift, and go to state 70
    DIV      shift, and go to state 71
    SUR      shift, and go to state 72

    $default  reduce using rule 56 (expr)


State 97

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   55     | expr OR_ASS expr .
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    LOP_ASS  shift, and go to state 44
    ADD_ASS  shift, and go to state 45
    SUB_ASS  shift, and go to state 46
    MUL_ASS  shift, and go to state 47
    DIV_ASS  shift, and go to state 48
    SUR_ASS  shift, and go to state 49
    LS_ASS   shift, and go to state 50
    RS_ASS   shift, and go to state 51
    AND_ASS  shift, and go to state 52
    OR_ASS   shift, and go to state 53
    XOR_ASS  shift, and go to state 54
    LOG_OR   shift, and go to state 55
    LOG_AND  shift, and go to state 56
    BIT_OR   shift, and go to state 57
    BIT_XOR  shift, and go to state 58
    BIT_AND  shift, and go to state 59
    EQ       shift, and go to state 60
    UEQ      shift, and go to state 61
    GT       shift, and go to state 62
    LT       shift, and go to state 63
    GE       shift, and go to state 64
    LE       shift, and go to state 65
    LSHIFT   shift, and go to state 66
    RSHIFT   shift, and go to state 67
    ADD      shift, and go to state 68
    SUB      shift, and go to state 69
    MUL      shift, and go to state 70
    DIV      shift, and go to state 71
    SUR      shift, and go to state 72

    $default  reduce using rule 55 (expr)


State 98

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr
   57     | expr XOR_ASS expr .

    LOP_ASS  shift, and go to state 44
    ADD_ASS  shift, and go to state 45
    SUB_ASS  shift, and go to state 46
    MUL_ASS  shift, and go to state 47
    DIV_ASS  shift, and go to state 48
    SUR_ASS  shift, and go to state 49
    LS_ASS   shift, and go to state 50
    RS_ASS   shift, and go to state 51
    AND_ASS  shift, and go to state 52
    OR_ASS   shift, and go to state 53
    XOR_ASS  shift, and go to state 54
    LOG_OR   shift, and go to state 55
    LOG_AND  shift, and go to state 56
    BIT_OR   shift, and go to state 57
    BIT_XOR  shift, and go to state 58
    BIT_AND  shift, and go to state 59
    EQ       shift, and go to state 60
    UEQ      shift, and go to state 61
    GT       shift, and go to state 62
    LT       shift, and go to state 63
    GE       shift, and go to state 64
    LE       shift, and go to state 65
    LSHIFT   shift, and go to state 66
    RSHIFT   shift, and go to state 67
    ADD      shift, and go to state 68
    SUB      shift, and go to state 69
    MUL      shift, and go to state 70
    DIV      shift, and go to state 71
    SUR      shift, and go to state 72

    $default  reduce using rule 57 (expr)


State 99

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   46     | expr LOG_OR expr .
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    LOG_AND  shift, and go to state 56
    BIT_OR   shift, and go to state 57
    BIT_XOR  shift, and go to state 58
    BIT_AND  shift, and go to state 59
    EQ       shift, and go to state 60
    UEQ      shift, and go to state 61
    GT       shift, and go to state 62
    LT       shift, and go to state 63
    GE       shift, and go to state 64
    LE       shift, and go to state 65
    LSHIFT   shift, and go to state 66
    RSHIFT   shift, and go to state 67
    ADD      shift, and go to state 68
    SUB      shift, and go to state 69
    MUL      shift, and go to state 70
    DIV      shift, and go to state 71
    SUR      shift, and go to state 72

    $default  reduce using rule 46 (expr)


State 100

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   45     | expr LOG_AND expr .
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    BIT_OR   shift, and go to state 57
    BIT_XOR  shift, and go to state 58
    BIT_AND  shift, and go to state 59
    EQ       shift, and go to state 60
    UEQ      shift, and go to state 61
    GT       shift, and go to state 62
    LT       shift, and go to state 63
    GE       shift, and go to state 64
    LE       shift, and go to state 65
    LSHIFT   shift, and go to state 66
    RSHIFT   shift, and go to state 67
    ADD      shift, and go to state 68
    SUB      shift, and go to state 69
    MUL      shift, and go to state 70
    DIV      shift, and go to state 71
    SUR      shift, and go to state 72

    $default  reduce using rule 45 (expr)


State 101

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   37     | expr BIT_OR expr .
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    BIT_XOR  shift, and go to state 58
    BIT_AND  shift, and go to state 59
    EQ       shift, and go to state 60
    UEQ      shift, and go to state 61
    GT       shift, and go to state 62
    LT       shift, and go to state 63
    GE       shift, and go to state 64
    LE       shift, and go to state 65
    LSHIFT   shift, and go to state 66
    RSHIFT   shift, and go to state 67
    ADD      shift, and go to state 68
    SUB      shift, and go to state 69
    MUL      shift, and go to state 70
    DIV      shift, and go to state 71
    SUR      shift, and go to state 72

    $default  reduce using rule 37 (expr)


State 102

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   38     | expr BIT_XOR expr .
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    BIT_AND  shift, and go to state 59
    EQ       shift, and go to state 60
    UEQ      shift, and go to state 61
    GT       shift, and go to state 62
    LT       shift, and go to state 63
    GE       shift, and go to state 64
    LE       shift, and go to state 65
    LSHIFT   shift, and go to state 66
    RSHIFT   shift, and go to state 67
    ADD      shift, and go to state 68
    SUB      shift, and go to state 69
    MUL      shift, and go to state 70
    DIV      shift, and go to state 71
    SUR      shift, and go to state 72

    $default  reduce using rule 38 (expr)


State 103

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   36     | expr BIT_AND expr .
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    EQ      shift, and go to state 60
    UEQ     shift, and go to state 61
    GT      shift, and go to state 62
    LT      shift, and go to state 63
    GE      shift, and go to state 64
    LE      shift, and go to state 65
    LSHIFT  shift, and go to state 66
    RSHIFT  shift, and go to state 67
    ADD     shift, and go to state 68
    SUB     shift, and go to state 69
    MUL     shift, and go to state 70
    DIV     shift, and go to state 71
    SUR     shift, and go to state 72

    $default  reduce using rule 36 (expr)


State 104

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   39     | expr EQ expr .
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    GT      shift, and go to state 62
    LT      shift, and go to state 63
    GE      shift, and go to state 64
    LE      shift, and go to state 65
    LSHIFT  shift, and go to state 66
    RSHIFT  shift, and go to state 67
    ADD     shift, and go to state 68
    SUB     shift, and go to state 69
    MUL     shift, and go to state 70
    DIV     shift, and go to state 71
    SUR     shift, and go to state 72

    $default  reduce using rule 39 (expr)


State 105

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   40     | expr UEQ expr .
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    GT      shift, and go to state 62
    LT      shift, and go to state 63
    GE      shift, and go to state 64
    LE      shift, and go to state 65
    LSHIFT  shift, and go to state 66
    RSHIFT  shift, and go to state 67
    ADD     shift, and go to state 68
    SUB     shift, and go to state 69
    MUL     shift, and go to state 70
    DIV     shift, and go to state 71
    SUR     shift, and go to state 72

    $default  reduce using rule 40 (expr)


State 106

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   42     | expr GT expr .
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    LSHIFT  shift, and go to state 66
    RSHIFT  shift, and go to state 67
    ADD     shift, and go to state 68
    SUB     shift, and go to state 69
    MUL     shift, and go to state 70
    DIV     shift, and go to state 71
    SUR     shift, and go to state 72

    $default  reduce using rule 42 (expr)


State 107

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   41     | expr LT expr .
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    LSHIFT  shift, and go to state 66
    RSHIFT  shift, and go to state 67
    ADD     shift, and go to state 68
    SUB     shift, and go to state 69
    MUL     shift, and go to state 70
    DIV     shift, and go to state 71
    SUR     shift, and go to state 72

    $default  reduce using rule 41 (expr)


State 108

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   44     | expr GE expr .
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    LSHIFT  shift, and go to state 66
    RSHIFT  shift, and go to state 67
    ADD     shift, and go to state 68
    SUB     shift, and go to state 69
    MUL     shift, and go to state 70
    DIV     shift, and go to state 71
    SUR     shift, and go to state 72

    $default  reduce using rule 44 (expr)


State 109

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   43     | expr LE expr .
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    LSHIFT  shift, and go to state 66
    RSHIFT  shift, and go to state 67
    ADD     shift, and go to state 68
    SUB     shift, and go to state 69
    MUL     shift, and go to state 70
    DIV     shift, and go to state 71
    SUR     shift, and go to state 72

    $default  reduce using rule 43 (expr)


State 110

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   34     | expr LSHIFT expr .
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69
    MUL  shift, and go to state 70
    DIV  shift, and go to state 71
    SUR  shift, and go to state 72

    $default  reduce using rule 34 (expr)


State 111

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   35     | expr RSHIFT expr .
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69
    MUL  shift, and go to state 70
    DIV  shift, and go to state 71
    SUR  shift, and go to state 72

    $default  reduce using rule 35 (expr)


State 112

   29 expr: expr . ADD expr
   29     | expr ADD expr .
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    MUL  shift, and go to state 70
    DIV  shift, and go to state 71
    SUR  shift, and go to state 72

    $default  reduce using rule 29 (expr)


State 113

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   30     | expr SUB expr .
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    MUL  shift, and go to state 70
    DIV  shift, and go to state 71
    SUR  shift, and go to state 72

    $default  reduce using rule 30 (expr)


State 114

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   31     | expr MUL expr .
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    $default  reduce using rule 31 (expr)


State 115

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   32     | expr DIV expr .
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    $default  reduce using rule 32 (expr)


State 116

   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   33     | expr SUR expr .
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    $default  reduce using rule 33 (expr)


State 117

    7 function: T IDENTIFIER LEFTBR RIGHTBR LBRACE statements . RBRACE
   13 statements: statements . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    RBRACE      shift, and go to state 130
    SEMICOLON   shift, and go to state 75
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    IF          shift, and go to state 76
    WHILE       shift, and go to state 77
    FOR         shift, and go to state 78
    RETURN      shift, and go to state 79

    statement    go to state 124
    declaration  go to state 82
    expr         go to state 83
    T            go to state 84


State 118

    6 function: T IDENTIFIER LEFTBR PARMS RIGHTBR LBRACE . statements RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    SEMICOLON   shift, and go to state 75
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    IF          shift, and go to state 76
    WHILE       shift, and go to state 77
    FOR         shift, and go to state 78
    RETURN      shift, and go to state 79

    statements   go to state 131
    statement    go to state 81
    declaration  go to state 82
    expr         go to state 83
    T            go to state 84


State 119

   18 statement: IF LEFTBR . expr RIGHTBR LBRACE statements RBRACE

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 132


State 120

   16 statement: WHILE LEFTBR . expr RIGHTBR LBRACE statements RBRACE

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 133


State 121

   17 statement: FOR LEFTBR . expr SEMICOLON expr SEMICOLON expr RIGHTBR LBRACE statements RBRACE

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 134


State 122

   19 statement: RETURN expr . SEMICOLON
   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    LOP_ASS    shift, and go to state 44
    ADD_ASS    shift, and go to state 45
    SUB_ASS    shift, and go to state 46
    MUL_ASS    shift, and go to state 47
    DIV_ASS    shift, and go to state 48
    SUR_ASS    shift, and go to state 49
    LS_ASS     shift, and go to state 50
    RS_ASS     shift, and go to state 51
    AND_ASS    shift, and go to state 52
    OR_ASS     shift, and go to state 53
    XOR_ASS    shift, and go to state 54
    LOG_OR     shift, and go to state 55
    LOG_AND    shift, and go to state 56
    BIT_OR     shift, and go to state 57
    BIT_XOR    shift, and go to state 58
    BIT_AND    shift, and go to state 59
    EQ         shift, and go to state 60
    UEQ        shift, and go to state 61
    GT         shift, and go to state 62
    LT         shift, and go to state 63
    GE         shift, and go to state 64
    LE         shift, and go to state 65
    LSHIFT     shift, and go to state 66
    RSHIFT     shift, and go to state 67
    ADD        shift, and go to state 68
    SUB        shift, and go to state 69
    MUL        shift, and go to state 70
    DIV        shift, and go to state 71
    SUR        shift, and go to state 72
    SEMICOLON  shift, and go to state 135


State 123

    9 function: T_VOID IDENTIFIER LEFTBR RIGHTBR LBRACE statements RBRACE .

    $default  reduce using rule 9 (function)


State 124

   13 statements: statements statement .

    $default  reduce using rule 13 (statements)


State 125

   15 statement: declaration SEMICOLON .

    $default  reduce using rule 15 (statement)


State 126

   20 statement: expr SEMICOLON .

    $default  reduce using rule 20 (statement)


State 127

   21 declaration: T IDENTIFIER . LOP_ASS expr
   23 IDENTIFIERS: IDENTIFIER .

    LOP_ASS  shift, and go to state 20

    $default  reduce using rule 23 (IDENTIFIERS)


State 128

    8 function: T_VOID IDENTIFIER LEFTBR PARMS RIGHTBR LBRACE statements . RBRACE
   13 statements: statements . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    RBRACE      shift, and go to state 136
    SEMICOLON   shift, and go to state 75
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    IF          shift, and go to state 76
    WHILE       shift, and go to state 77
    FOR         shift, and go to state 78
    RETURN      shift, and go to state 79

    statement    go to state 124
    declaration  go to state 82
    expr         go to state 83
    T            go to state 84


State 129

   11 PARMS: PARMS COMMA T IDENTIFIER .

    $default  reduce using rule 11 (PARMS)


State 130

    7 function: T IDENTIFIER LEFTBR RIGHTBR LBRACE statements RBRACE .

    $default  reduce using rule 7 (function)


State 131

    6 function: T IDENTIFIER LEFTBR PARMS RIGHTBR LBRACE statements . RBRACE
   13 statements: statements . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    RBRACE      shift, and go to state 137
    SEMICOLON   shift, and go to state 75
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    IF          shift, and go to state 76
    WHILE       shift, and go to state 77
    FOR         shift, and go to state 78
    RETURN      shift, and go to state 79

    statement    go to state 124
    declaration  go to state 82
    expr         go to state 83
    T            go to state 84


State 132

   18 statement: IF LEFTBR expr . RIGHTBR LBRACE statements RBRACE
   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    LOP_ASS  shift, and go to state 44
    ADD_ASS  shift, and go to state 45
    SUB_ASS  shift, and go to state 46
    MUL_ASS  shift, and go to state 47
    DIV_ASS  shift, and go to state 48
    SUR_ASS  shift, and go to state 49
    LS_ASS   shift, and go to state 50
    RS_ASS   shift, and go to state 51
    AND_ASS  shift, and go to state 52
    OR_ASS   shift, and go to state 53
    XOR_ASS  shift, and go to state 54
    LOG_OR   shift, and go to state 55
    LOG_AND  shift, and go to state 56
    BIT_OR   shift, and go to state 57
    BIT_XOR  shift, and go to state 58
    BIT_AND  shift, and go to state 59
    EQ       shift, and go to state 60
    UEQ      shift, and go to state 61
    GT       shift, and go to state 62
    LT       shift, and go to state 63
    GE       shift, and go to state 64
    LE       shift, and go to state 65
    LSHIFT   shift, and go to state 66
    RSHIFT   shift, and go to state 67
    ADD      shift, and go to state 68
    SUB      shift, and go to state 69
    MUL      shift, and go to state 70
    DIV      shift, and go to state 71
    SUR      shift, and go to state 72
    RIGHTBR  shift, and go to state 138


State 133

   16 statement: WHILE LEFTBR expr . RIGHTBR LBRACE statements RBRACE
   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    LOP_ASS  shift, and go to state 44
    ADD_ASS  shift, and go to state 45
    SUB_ASS  shift, and go to state 46
    MUL_ASS  shift, and go to state 47
    DIV_ASS  shift, and go to state 48
    SUR_ASS  shift, and go to state 49
    LS_ASS   shift, and go to state 50
    RS_ASS   shift, and go to state 51
    AND_ASS  shift, and go to state 52
    OR_ASS   shift, and go to state 53
    XOR_ASS  shift, and go to state 54
    LOG_OR   shift, and go to state 55
    LOG_AND  shift, and go to state 56
    BIT_OR   shift, and go to state 57
    BIT_XOR  shift, and go to state 58
    BIT_AND  shift, and go to state 59
    EQ       shift, and go to state 60
    UEQ      shift, and go to state 61
    GT       shift, and go to state 62
    LT       shift, and go to state 63
    GE       shift, and go to state 64
    LE       shift, and go to state 65
    LSHIFT   shift, and go to state 66
    RSHIFT   shift, and go to state 67
    ADD      shift, and go to state 68
    SUB      shift, and go to state 69
    MUL      shift, and go to state 70
    DIV      shift, and go to state 71
    SUR      shift, and go to state 72
    RIGHTBR  shift, and go to state 139


State 134

   17 statement: FOR LEFTBR expr . SEMICOLON expr SEMICOLON expr RIGHTBR LBRACE statements RBRACE
   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    LOP_ASS    shift, and go to state 44
    ADD_ASS    shift, and go to state 45
    SUB_ASS    shift, and go to state 46
    MUL_ASS    shift, and go to state 47
    DIV_ASS    shift, and go to state 48
    SUR_ASS    shift, and go to state 49
    LS_ASS     shift, and go to state 50
    RS_ASS     shift, and go to state 51
    AND_ASS    shift, and go to state 52
    OR_ASS     shift, and go to state 53
    XOR_ASS    shift, and go to state 54
    LOG_OR     shift, and go to state 55
    LOG_AND    shift, and go to state 56
    BIT_OR     shift, and go to state 57
    BIT_XOR    shift, and go to state 58
    BIT_AND    shift, and go to state 59
    EQ         shift, and go to state 60
    UEQ        shift, and go to state 61
    GT         shift, and go to state 62
    LT         shift, and go to state 63
    GE         shift, and go to state 64
    LE         shift, and go to state 65
    LSHIFT     shift, and go to state 66
    RSHIFT     shift, and go to state 67
    ADD        shift, and go to state 68
    SUB        shift, and go to state 69
    MUL        shift, and go to state 70
    DIV        shift, and go to state 71
    SUR        shift, and go to state 72
    SEMICOLON  shift, and go to state 140


State 135

   19 statement: RETURN expr SEMICOLON .

    $default  reduce using rule 19 (statement)


State 136

    8 function: T_VOID IDENTIFIER LEFTBR PARMS RIGHTBR LBRACE statements RBRACE .

    $default  reduce using rule 8 (function)


State 137

    6 function: T IDENTIFIER LEFTBR PARMS RIGHTBR LBRACE statements RBRACE .

    $default  reduce using rule 6 (function)


State 138

   18 statement: IF LEFTBR expr RIGHTBR . LBRACE statements RBRACE

    LBRACE  shift, and go to state 141


State 139

   16 statement: WHILE LEFTBR expr RIGHTBR . LBRACE statements RBRACE

    LBRACE  shift, and go to state 142


State 140

   17 statement: FOR LEFTBR expr SEMICOLON . expr SEMICOLON expr RIGHTBR LBRACE statements RBRACE

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 143


State 141

   18 statement: IF LEFTBR expr RIGHTBR LBRACE . statements RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    SEMICOLON   shift, and go to state 75
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    IF          shift, and go to state 76
    WHILE       shift, and go to state 77
    FOR         shift, and go to state 78
    RETURN      shift, and go to state 79

    statements   go to state 144
    statement    go to state 81
    declaration  go to state 82
    expr         go to state 83
    T            go to state 84


State 142

   16 statement: WHILE LEFTBR expr RIGHTBR LBRACE . statements RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    SEMICOLON   shift, and go to state 75
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    IF          shift, and go to state 76
    WHILE       shift, and go to state 77
    FOR         shift, and go to state 78
    RETURN      shift, and go to state 79

    statements   go to state 145
    statement    go to state 81
    declaration  go to state 82
    expr         go to state 83
    T            go to state 84


State 143

   17 statement: FOR LEFTBR expr SEMICOLON expr . SEMICOLON expr RIGHTBR LBRACE statements RBRACE
   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    LOP_ASS    shift, and go to state 44
    ADD_ASS    shift, and go to state 45
    SUB_ASS    shift, and go to state 46
    MUL_ASS    shift, and go to state 47
    DIV_ASS    shift, and go to state 48
    SUR_ASS    shift, and go to state 49
    LS_ASS     shift, and go to state 50
    RS_ASS     shift, and go to state 51
    AND_ASS    shift, and go to state 52
    OR_ASS     shift, and go to state 53
    XOR_ASS    shift, and go to state 54
    LOG_OR     shift, and go to state 55
    LOG_AND    shift, and go to state 56
    BIT_OR     shift, and go to state 57
    BIT_XOR    shift, and go to state 58
    BIT_AND    shift, and go to state 59
    EQ         shift, and go to state 60
    UEQ        shift, and go to state 61
    GT         shift, and go to state 62
    LT         shift, and go to state 63
    GE         shift, and go to state 64
    LE         shift, and go to state 65
    LSHIFT     shift, and go to state 66
    RSHIFT     shift, and go to state 67
    ADD        shift, and go to state 68
    SUB        shift, and go to state 69
    MUL        shift, and go to state 70
    DIV        shift, and go to state 71
    SUR        shift, and go to state 72
    SEMICOLON  shift, and go to state 146


State 144

   13 statements: statements . statement
   18 statement: IF LEFTBR expr RIGHTBR LBRACE statements . RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    RBRACE      shift, and go to state 147
    SEMICOLON   shift, and go to state 75
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    IF          shift, and go to state 76
    WHILE       shift, and go to state 77
    FOR         shift, and go to state 78
    RETURN      shift, and go to state 79

    statement    go to state 124
    declaration  go to state 82
    expr         go to state 83
    T            go to state 84


State 145

   13 statements: statements . statement
   16 statement: WHILE LEFTBR expr RIGHTBR LBRACE statements . RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    RBRACE      shift, and go to state 148
    SEMICOLON   shift, and go to state 75
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    IF          shift, and go to state 76
    WHILE       shift, and go to state 77
    FOR         shift, and go to state 78
    RETURN      shift, and go to state 79

    statement    go to state 124
    declaration  go to state 82
    expr         go to state 83
    T            go to state 84


State 146

   17 statement: FOR LEFTBR expr SEMICOLON expr SEMICOLON . expr RIGHTBR LBRACE statements RBRACE

    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32

    expr  go to state 149


State 147

   18 statement: IF LEFTBR expr RIGHTBR LBRACE statements RBRACE .

    $default  reduce using rule 18 (statement)


State 148

   16 statement: WHILE LEFTBR expr RIGHTBR LBRACE statements RBRACE .

    $default  reduce using rule 16 (statement)


State 149

   17 statement: FOR LEFTBR expr SEMICOLON expr SEMICOLON expr . RIGHTBR LBRACE statements RBRACE
   29 expr: expr . ADD expr
   30     | expr . SUB expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . SUR expr
   34     | expr . LSHIFT expr
   35     | expr . RSHIFT expr
   36     | expr . BIT_AND expr
   37     | expr . BIT_OR expr
   38     | expr . BIT_XOR expr
   39     | expr . EQ expr
   40     | expr . UEQ expr
   41     | expr . LT expr
   42     | expr . GT expr
   43     | expr . LE expr
   44     | expr . GE expr
   45     | expr . LOG_AND expr
   46     | expr . LOG_OR expr
   47     | expr . LOP_ASS expr
   48     | expr . ADD_ASS expr
   49     | expr . SUB_ASS expr
   50     | expr . MUL_ASS expr
   51     | expr . DIV_ASS expr
   52     | expr . SUR_ASS expr
   53     | expr . LS_ASS expr
   54     | expr . RS_ASS expr
   55     | expr . OR_ASS expr
   56     | expr . AND_ASS expr
   57     | expr . XOR_ASS expr

    LOP_ASS  shift, and go to state 44
    ADD_ASS  shift, and go to state 45
    SUB_ASS  shift, and go to state 46
    MUL_ASS  shift, and go to state 47
    DIV_ASS  shift, and go to state 48
    SUR_ASS  shift, and go to state 49
    LS_ASS   shift, and go to state 50
    RS_ASS   shift, and go to state 51
    AND_ASS  shift, and go to state 52
    OR_ASS   shift, and go to state 53
    XOR_ASS  shift, and go to state 54
    LOG_OR   shift, and go to state 55
    LOG_AND  shift, and go to state 56
    BIT_OR   shift, and go to state 57
    BIT_XOR  shift, and go to state 58
    BIT_AND  shift, and go to state 59
    EQ       shift, and go to state 60
    UEQ      shift, and go to state 61
    GT       shift, and go to state 62
    LT       shift, and go to state 63
    GE       shift, and go to state 64
    LE       shift, and go to state 65
    LSHIFT   shift, and go to state 66
    RSHIFT   shift, and go to state 67
    ADD      shift, and go to state 68
    SUB      shift, and go to state 69
    MUL      shift, and go to state 70
    DIV      shift, and go to state 71
    SUR      shift, and go to state 72
    RIGHTBR  shift, and go to state 150


State 150

   17 statement: FOR LEFTBR expr SEMICOLON expr SEMICOLON expr RIGHTBR . LBRACE statements RBRACE

    LBRACE  shift, and go to state 151


State 151

   17 statement: FOR LEFTBR expr SEMICOLON expr SEMICOLON expr RIGHTBR LBRACE . statements RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    SEMICOLON   shift, and go to state 75
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    IF          shift, and go to state 76
    WHILE       shift, and go to state 77
    FOR         shift, and go to state 78
    RETURN      shift, and go to state 79

    statements   go to state 152
    statement    go to state 81
    declaration  go to state 82
    expr         go to state 83
    T            go to state 84


State 152

   13 statements: statements . statement
   17 statement: FOR LEFTBR expr SEMICOLON expr SEMICOLON expr RIGHTBR LBRACE statements . RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    LEFTBR      shift, and go to state 28
    RBRACE      shift, and go to state 153
    SEMICOLON   shift, and go to state 75
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    IF          shift, and go to state 76
    WHILE       shift, and go to state 77
    FOR         shift, and go to state 78
    RETURN      shift, and go to state 79

    statement    go to state 124
    declaration  go to state 82
    expr         go to state 83
    T            go to state 84


State 153

   17 statement: FOR LEFTBR expr SEMICOLON expr SEMICOLON expr RIGHTBR LBRACE statements RBRACE .

    $default  reduce using rule 17 (statement)
