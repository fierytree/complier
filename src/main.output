Terminals unused in grammar

    BOOL
    LOP_EQ


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: SEMICOLON
    5          | declaration SEMICOLON

    6 declaration: T IDENTIFIER LOP_ASSIGN expr
    7            | T IDENTIFIERS

    8 IDENTIFIERS: IDENTIFIER
    9            | IDENTIFIERS COMMA IDENTIFIER

   10 expr: IDENTIFIER
   11     | INTEGER
   12     | CHAR
   13     | STRING

   14 T: T_INT
   15  | T_CHAR
   16  | T_BOOL
   17  | T_STRING


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_CHAR (258) 15
    T_INT (259) 14
    T_STRING (260) 17
    T_BOOL (261) 16
    LOP_ASSIGN (262) 6
    SEMICOLON (263) 4 5
    COMMA (264) 9
    IDENTIFIER (265) 6 8 9 10
    INTEGER (266) 11
    CHAR (267) 12
    BOOL (268)
    STRING (269) 13
    LOP_EQ (270)


Nonterminals, with rules where they appear

    $accept (16)
        on left: 0
    program (17)
        on left: 1
        on right: 0
    statements (18)
        on left: 2 3
        on right: 1 3
    statement (19)
        on left: 4 5
        on right: 2 3
    declaration (20)
        on left: 6 7
        on right: 5
    IDENTIFIERS (21)
        on left: 8 9
        on right: 7 9
    expr (22)
        on left: 10 11 12 13
        on right: 6
    T (23)
        on left: 14 15 16 17
        on right: 6 7


State 0

    0 $accept: . program $end

    T_CHAR     shift, and go to state 1
    T_INT      shift, and go to state 2
    T_STRING   shift, and go to state 3
    T_BOOL     shift, and go to state 4
    SEMICOLON  shift, and go to state 5

    program      go to state 6
    statements   go to state 7
    statement    go to state 8
    declaration  go to state 9
    T            go to state 10


State 1

   15 T: T_CHAR .

    $default  reduce using rule 15 (T)


State 2

   14 T: T_INT .

    $default  reduce using rule 14 (T)


State 3

   17 T: T_STRING .

    $default  reduce using rule 17 (T)


State 4

   16 T: T_BOOL .

    $default  reduce using rule 16 (T)


State 5

    4 statement: SEMICOLON .

    $default  reduce using rule 4 (statement)


State 6

    0 $accept: program . $end

    $end  shift, and go to state 11


State 7

    1 program: statements .
    3 statements: statements . statement

    T_CHAR     shift, and go to state 1
    T_INT      shift, and go to state 2
    T_STRING   shift, and go to state 3
    T_BOOL     shift, and go to state 4
    SEMICOLON  shift, and go to state 5

    $default  reduce using rule 1 (program)

    statement    go to state 12
    declaration  go to state 9
    T            go to state 10


State 8

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 9

    5 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 13


State 10

    6 declaration: T . IDENTIFIER LOP_ASSIGN expr
    7            | T . IDENTIFIERS

    IDENTIFIER  shift, and go to state 14

    IDENTIFIERS  go to state 15


State 11

    0 $accept: program $end .

    $default  accept


State 12

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 13

    5 statement: declaration SEMICOLON .

    $default  reduce using rule 5 (statement)


State 14

    6 declaration: T IDENTIFIER . LOP_ASSIGN expr
    8 IDENTIFIERS: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 16

    $default  reduce using rule 8 (IDENTIFIERS)


State 15

    7 declaration: T IDENTIFIERS .
    9 IDENTIFIERS: IDENTIFIERS . COMMA IDENTIFIER

    COMMA  shift, and go to state 17

    $default  reduce using rule 7 (declaration)


State 16

    6 declaration: T IDENTIFIER LOP_ASSIGN . expr

    IDENTIFIER  shift, and go to state 18
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    expr  go to state 22


State 17

    9 IDENTIFIERS: IDENTIFIERS COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 23


State 18

   10 expr: IDENTIFIER .

    $default  reduce using rule 10 (expr)


State 19

   11 expr: INTEGER .

    $default  reduce using rule 11 (expr)


State 20

   12 expr: CHAR .

    $default  reduce using rule 12 (expr)


State 21

   13 expr: STRING .

    $default  reduce using rule 13 (expr)


State 22

    6 declaration: T IDENTIFIER LOP_ASSIGN expr .

    $default  reduce using rule 6 (declaration)


State 23

    9 IDENTIFIERS: IDENTIFIERS COMMA IDENTIFIER .

    $default  reduce using rule 9 (IDENTIFIERS)
